# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = blackjack$(EXEEXT)
# FIXMEchpe: what's this -lz about??
@HAVE_GNOME_TRUE@am__append_1 = $(GNOME_CFLAGS)
@HAVE_GNOME_TRUE@am__append_2 = $(GNOME_LIBS)
@HAVE_RSVG_TRUE@am__append_3 = $(RSVG_CFLAGS)
@HAVE_RSVG_TRUE@am__append_4 = $(RSVG_LIBS)
@WITH_GTHREAD_TRUE@am__append_5 = $(GHTREAD_CFLAGS)
@WITH_GTHREAD_TRUE@am__append_6 = $(GTHREAD_LIBS)
subdir = blackjack/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/c99.m4 $(top_srcdir)/m4/ggz.m4 \
	$(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/platform.m4 $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/m4/shave.m4 $(top_srcdir)/m4/sound.m4 \
	$(top_srcdir)/m4/system.m4 $(top_srcdir)/m4/tls.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 =
am_blackjack_OBJECTS = blackjack-blackjack.$(OBJEXT) \
	blackjack-card.$(OBJEXT) blackjack-chips.$(OBJEXT) \
	blackjack-dialog.$(OBJEXT) blackjack-draw.$(OBJEXT) \
	blackjack-events.$(OBJEXT) blackjack-game.$(OBJEXT) \
	blackjack-hand.$(OBJEXT) blackjack-menu.$(OBJEXT) \
	blackjack-player.$(OBJEXT) blackjack-press_data.$(OBJEXT) \
	blackjack-slot.$(OBJEXT) blackjack-splash.$(OBJEXT) \
	blackjack-strategy.$(OBJEXT) $(am__objects_1)
blackjack_OBJECTS = $(am_blackjack_OBJECTS)
am__DEPENDENCIES_1 =
@HAVE_GNOME_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@HAVE_RSVG_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
@WITH_GTHREAD_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
blackjack_DEPENDENCIES =  \
	$(top_builddir)/libgames-support/libgames-support.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4)
blackjack_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(blackjack_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(blackjack_SOURCES)
DIST_SOURCES = $(blackjack_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_LDFLAGS = @AM_LDFLAGS@
AM_MAKEFLAGS = @AM_MAKEFLAGS@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CANBERRA_GTK_CFLAGS = @CANBERRA_GTK_CFLAGS@
CANBERRA_GTK_LIBS = @CANBERRA_GTK_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHECK_CFLAGS = @CHECK_CFLAGS@
CHECK_LIBS = @CHECK_LIBS@
CLUTTER_CFLAGS = @CLUTTER_CFLAGS@
CLUTTER_GTK_CFLAGS = @CLUTTER_GTK_CFLAGS@
CLUTTER_GTK_LIBS = @CLUTTER_GTK_LIBS@
CLUTTER_LIBS = @CLUTTER_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DBUS_GLIB_CFLAGS = @DBUS_GLIB_CFLAGS@
DBUS_GLIB_LIBS = @DBUS_GLIB_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLE_DEPRECATED = @DISABLE_DEPRECATED@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DOC_USER_FORMATS = @DOC_USER_FORMATS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FGREP = @FGREP@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GGZDMOD_INCLUDES = @GGZDMOD_INCLUDES@
GGZDMOD_LDFLAGS = @GGZDMOD_LDFLAGS@
GGZMOD_INCLUDES = @GGZMOD_INCLUDES@
GGZMOD_LDFLAGS = @GGZMOD_LDFLAGS@
GGZTLS_INCLUDES = @GGZTLS_INCLUDES@
GGZTLS_LDFLAGS = @GGZTLS_LDFLAGS@
GGZ_CONFIG = @GGZ_CONFIG@
GGZ_GTK_INCLUDES = @GGZ_GTK_INCLUDES@
GGZ_GTK_LDFLAGS = @GGZ_GTK_LDFLAGS@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GLIB_GENMARSHAL_INTERNAL = @GLIB_GENMARSHAL_INTERNAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_CFLAGS = @GNOME_CFLAGS@
GNOME_GAMES_GGZ_DSC_RULE = @GNOME_GAMES_GGZ_DSC_RULE@
GNOME_GAMES_GGZ_INTLTOOL_ROOM_RULE = @GNOME_GAMES_GGZ_INTLTOOL_ROOM_RULE@
GNOME_LIBS = @GNOME_LIBS@
GREP = @GREP@
GTHREAD_CFLAGS = @GTHREAD_CFLAGS@
GTHREAD_LIBS = @GTHREAD_LIBS@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
GUILE = @GUILE@
GUILE_CFLAGS = @GUILE_CFLAGS@
GUILE_CONFIG = @GUILE_CONFIG@
GUILE_LIBS = @GUILE_LIBS@
HELP_DIR = @HELP_DIR@
HILDON_CFLAGS = @HILDON_CFLAGS@
HILDON_LIBS = @HILDON_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
LD = @LD@
LDADD = @LDADD@
LDFLAGS = @LDFLAGS@
LIBGGZ_INCLUDES = @LIBGGZ_INCLUDES@
LIBGGZ_LDFLAGS = @LIBGGZ_LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_ASYNC = @LIB_ASYNC@
LIB_GCRYPT = @LIB_GCRYPT@
LIB_GGZ = @LIB_GGZ@
LIB_GGZDMOD = @LIB_GGZDMOD@
LIB_GGZMOD = @LIB_GGZMOD@
LIB_GGZTLS = @LIB_GGZTLS@
LIB_GGZ_GTK = @LIB_GGZ_GTK@
LIPO = @LIPO@
LN_S = @LN_S@
LSB_RELEASE = @LSB_RELEASE@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEFLAGS = @MAKEFLAGS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJC = @OBJC@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMF_DIR = @OMF_DIR@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
PYGTK_CFLAGS = @PYGTK_CFLAGS@
PYGTK_LIBS = @PYGTK_LIBS@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
Q = @Q@
RANLIB = @RANLIB@
RSVG_CFLAGS = @RSVG_CFLAGS@
RSVG_LIBS = @RSVG_LIBS@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SDL_MIXER_CFLAGS = @SDL_MIXER_CFLAGS@
SDL_MIXER_LIBS = @SDL_MIXER_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SMCLIENT_CFLAGS = @SMCLIENT_CFLAGS@
SMCLIENT_LIBS = @SMCLIENT_LIBS@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
V = @V@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
WARN_CXXFLAGS = @WARN_CXXFLAGS@
XGETTEXT = @XGETTEXT@
XML_CFLAGS = @XML_CFLAGS@
XML_LIBS = @XML_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
allgames = @allgames@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gamelist = @gamelist@
ggz_config = @ggz_config@
ggzdatadir = @ggzdatadir@
ggzdconfdir = @ggzdconfdir@
ggzddatadir = @ggzddatadir@
ggzdexecmoddir = @ggzdexecmoddir@
ggzdexecmodpath = @ggzdexecmodpath@
ggzdmod_includes = @ggzdmod_includes@
ggzdmod_libraries = @ggzdmod_libraries@
ggzexecmoddir = @ggzexecmoddir@
ggzmod_includes = @ggzmod_includes@
ggzmod_libraries = @ggzmod_libraries@
ggzmoduleconfdir = @ggzmoduleconfdir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libggz_includes = @libggz_includes@
libggz_libraries = @libggz_libraries@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
packagesrcdir = @packagesrcdir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
scoredir = @scoredir@
scores_group = @scores_group@
scores_user = @scores_user@
setgid = @setgid@
sharedstatedir = @sharedstatedir@
shavedir = @shavedir@
srcdir = @srcdir@
staginggames = @staginggames@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
NULL = 
blackjack_SOURCES = \
	blackjack.cpp	\
	blackjack.h	\
	card.cpp	\
	card.h		\
	chips.cpp	\
	chips.h		\
	dialog.cpp	\
	dialog.h	\
	draw.cpp	\
	draw.h		\
	events.cpp	\
	events.h	\
	game.cpp	\
	game.h		\
	hand.cpp	\
	hand.h		\
	menu.cpp	\
	menu.h		\
        player.cpp	\
	player.h	\
	press_data.cpp  \
	press_data.h    \
	slot.cpp	\
	slot.h		\
	splash.cpp	\
	splash.h	\
	strategy.cpp	\
	strategy.h	\
	$(NULL)

blackjack_CPPFLAGS = \
	-I$(top_srcdir) \
	$(AM_CPPFLAGS)

blackjack_CXXFLAGS = $(GTK_CFLAGS) $(XML_CFLAGS) $(AM_CXXFLAGS) \
	$(am__append_1) $(am__append_3) $(am__append_5)
blackjack_LDADD =  \
	$(top_builddir)/libgames-support/libgames-support.la \
	$(GTK_LIBS) $(XML_LIBS) -lz $(am__append_2) $(am__append_4) \
	$(am__append_6)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  blackjack/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  blackjack/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
blackjack$(EXEEXT): $(blackjack_OBJECTS) $(blackjack_DEPENDENCIES) 
	@rm -f blackjack$(EXEEXT)
	$(blackjack_LINK) $(blackjack_OBJECTS) $(blackjack_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-blackjack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-card.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-chips.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-draw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-events.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-hand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-press_data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-slot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-splash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blackjack-strategy.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

blackjack-blackjack.o: blackjack.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-blackjack.o -MD -MP -MF $(DEPDIR)/blackjack-blackjack.Tpo -c -o blackjack-blackjack.o `test -f 'blackjack.cpp' || echo '$(srcdir)/'`blackjack.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-blackjack.Tpo $(DEPDIR)/blackjack-blackjack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='blackjack.cpp' object='blackjack-blackjack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-blackjack.o `test -f 'blackjack.cpp' || echo '$(srcdir)/'`blackjack.cpp

blackjack-blackjack.obj: blackjack.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-blackjack.obj -MD -MP -MF $(DEPDIR)/blackjack-blackjack.Tpo -c -o blackjack-blackjack.obj `if test -f 'blackjack.cpp'; then $(CYGPATH_W) 'blackjack.cpp'; else $(CYGPATH_W) '$(srcdir)/blackjack.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-blackjack.Tpo $(DEPDIR)/blackjack-blackjack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='blackjack.cpp' object='blackjack-blackjack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-blackjack.obj `if test -f 'blackjack.cpp'; then $(CYGPATH_W) 'blackjack.cpp'; else $(CYGPATH_W) '$(srcdir)/blackjack.cpp'; fi`

blackjack-card.o: card.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-card.o -MD -MP -MF $(DEPDIR)/blackjack-card.Tpo -c -o blackjack-card.o `test -f 'card.cpp' || echo '$(srcdir)/'`card.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-card.Tpo $(DEPDIR)/blackjack-card.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='card.cpp' object='blackjack-card.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-card.o `test -f 'card.cpp' || echo '$(srcdir)/'`card.cpp

blackjack-card.obj: card.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-card.obj -MD -MP -MF $(DEPDIR)/blackjack-card.Tpo -c -o blackjack-card.obj `if test -f 'card.cpp'; then $(CYGPATH_W) 'card.cpp'; else $(CYGPATH_W) '$(srcdir)/card.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-card.Tpo $(DEPDIR)/blackjack-card.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='card.cpp' object='blackjack-card.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-card.obj `if test -f 'card.cpp'; then $(CYGPATH_W) 'card.cpp'; else $(CYGPATH_W) '$(srcdir)/card.cpp'; fi`

blackjack-chips.o: chips.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-chips.o -MD -MP -MF $(DEPDIR)/blackjack-chips.Tpo -c -o blackjack-chips.o `test -f 'chips.cpp' || echo '$(srcdir)/'`chips.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-chips.Tpo $(DEPDIR)/blackjack-chips.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='chips.cpp' object='blackjack-chips.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-chips.o `test -f 'chips.cpp' || echo '$(srcdir)/'`chips.cpp

blackjack-chips.obj: chips.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-chips.obj -MD -MP -MF $(DEPDIR)/blackjack-chips.Tpo -c -o blackjack-chips.obj `if test -f 'chips.cpp'; then $(CYGPATH_W) 'chips.cpp'; else $(CYGPATH_W) '$(srcdir)/chips.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-chips.Tpo $(DEPDIR)/blackjack-chips.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='chips.cpp' object='blackjack-chips.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-chips.obj `if test -f 'chips.cpp'; then $(CYGPATH_W) 'chips.cpp'; else $(CYGPATH_W) '$(srcdir)/chips.cpp'; fi`

blackjack-dialog.o: dialog.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-dialog.o -MD -MP -MF $(DEPDIR)/blackjack-dialog.Tpo -c -o blackjack-dialog.o `test -f 'dialog.cpp' || echo '$(srcdir)/'`dialog.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-dialog.Tpo $(DEPDIR)/blackjack-dialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dialog.cpp' object='blackjack-dialog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-dialog.o `test -f 'dialog.cpp' || echo '$(srcdir)/'`dialog.cpp

blackjack-dialog.obj: dialog.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-dialog.obj -MD -MP -MF $(DEPDIR)/blackjack-dialog.Tpo -c -o blackjack-dialog.obj `if test -f 'dialog.cpp'; then $(CYGPATH_W) 'dialog.cpp'; else $(CYGPATH_W) '$(srcdir)/dialog.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-dialog.Tpo $(DEPDIR)/blackjack-dialog.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dialog.cpp' object='blackjack-dialog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-dialog.obj `if test -f 'dialog.cpp'; then $(CYGPATH_W) 'dialog.cpp'; else $(CYGPATH_W) '$(srcdir)/dialog.cpp'; fi`

blackjack-draw.o: draw.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-draw.o -MD -MP -MF $(DEPDIR)/blackjack-draw.Tpo -c -o blackjack-draw.o `test -f 'draw.cpp' || echo '$(srcdir)/'`draw.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-draw.Tpo $(DEPDIR)/blackjack-draw.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draw.cpp' object='blackjack-draw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-draw.o `test -f 'draw.cpp' || echo '$(srcdir)/'`draw.cpp

blackjack-draw.obj: draw.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-draw.obj -MD -MP -MF $(DEPDIR)/blackjack-draw.Tpo -c -o blackjack-draw.obj `if test -f 'draw.cpp'; then $(CYGPATH_W) 'draw.cpp'; else $(CYGPATH_W) '$(srcdir)/draw.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-draw.Tpo $(DEPDIR)/blackjack-draw.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='draw.cpp' object='blackjack-draw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-draw.obj `if test -f 'draw.cpp'; then $(CYGPATH_W) 'draw.cpp'; else $(CYGPATH_W) '$(srcdir)/draw.cpp'; fi`

blackjack-events.o: events.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-events.o -MD -MP -MF $(DEPDIR)/blackjack-events.Tpo -c -o blackjack-events.o `test -f 'events.cpp' || echo '$(srcdir)/'`events.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-events.Tpo $(DEPDIR)/blackjack-events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='events.cpp' object='blackjack-events.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-events.o `test -f 'events.cpp' || echo '$(srcdir)/'`events.cpp

blackjack-events.obj: events.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-events.obj -MD -MP -MF $(DEPDIR)/blackjack-events.Tpo -c -o blackjack-events.obj `if test -f 'events.cpp'; then $(CYGPATH_W) 'events.cpp'; else $(CYGPATH_W) '$(srcdir)/events.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-events.Tpo $(DEPDIR)/blackjack-events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='events.cpp' object='blackjack-events.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-events.obj `if test -f 'events.cpp'; then $(CYGPATH_W) 'events.cpp'; else $(CYGPATH_W) '$(srcdir)/events.cpp'; fi`

blackjack-game.o: game.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-game.o -MD -MP -MF $(DEPDIR)/blackjack-game.Tpo -c -o blackjack-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-game.Tpo $(DEPDIR)/blackjack-game.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game.cpp' object='blackjack-game.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp

blackjack-game.obj: game.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-game.obj -MD -MP -MF $(DEPDIR)/blackjack-game.Tpo -c -o blackjack-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-game.Tpo $(DEPDIR)/blackjack-game.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game.cpp' object='blackjack-game.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`

blackjack-hand.o: hand.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-hand.o -MD -MP -MF $(DEPDIR)/blackjack-hand.Tpo -c -o blackjack-hand.o `test -f 'hand.cpp' || echo '$(srcdir)/'`hand.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-hand.Tpo $(DEPDIR)/blackjack-hand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hand.cpp' object='blackjack-hand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-hand.o `test -f 'hand.cpp' || echo '$(srcdir)/'`hand.cpp

blackjack-hand.obj: hand.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-hand.obj -MD -MP -MF $(DEPDIR)/blackjack-hand.Tpo -c -o blackjack-hand.obj `if test -f 'hand.cpp'; then $(CYGPATH_W) 'hand.cpp'; else $(CYGPATH_W) '$(srcdir)/hand.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-hand.Tpo $(DEPDIR)/blackjack-hand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hand.cpp' object='blackjack-hand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-hand.obj `if test -f 'hand.cpp'; then $(CYGPATH_W) 'hand.cpp'; else $(CYGPATH_W) '$(srcdir)/hand.cpp'; fi`

blackjack-menu.o: menu.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-menu.o -MD -MP -MF $(DEPDIR)/blackjack-menu.Tpo -c -o blackjack-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-menu.Tpo $(DEPDIR)/blackjack-menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu.cpp' object='blackjack-menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp

blackjack-menu.obj: menu.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-menu.obj -MD -MP -MF $(DEPDIR)/blackjack-menu.Tpo -c -o blackjack-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-menu.Tpo $(DEPDIR)/blackjack-menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu.cpp' object='blackjack-menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`

blackjack-player.o: player.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-player.o -MD -MP -MF $(DEPDIR)/blackjack-player.Tpo -c -o blackjack-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-player.Tpo $(DEPDIR)/blackjack-player.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='player.cpp' object='blackjack-player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp

blackjack-player.obj: player.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-player.obj -MD -MP -MF $(DEPDIR)/blackjack-player.Tpo -c -o blackjack-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-player.Tpo $(DEPDIR)/blackjack-player.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='player.cpp' object='blackjack-player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`

blackjack-press_data.o: press_data.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-press_data.o -MD -MP -MF $(DEPDIR)/blackjack-press_data.Tpo -c -o blackjack-press_data.o `test -f 'press_data.cpp' || echo '$(srcdir)/'`press_data.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-press_data.Tpo $(DEPDIR)/blackjack-press_data.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='press_data.cpp' object='blackjack-press_data.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-press_data.o `test -f 'press_data.cpp' || echo '$(srcdir)/'`press_data.cpp

blackjack-press_data.obj: press_data.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-press_data.obj -MD -MP -MF $(DEPDIR)/blackjack-press_data.Tpo -c -o blackjack-press_data.obj `if test -f 'press_data.cpp'; then $(CYGPATH_W) 'press_data.cpp'; else $(CYGPATH_W) '$(srcdir)/press_data.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-press_data.Tpo $(DEPDIR)/blackjack-press_data.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='press_data.cpp' object='blackjack-press_data.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-press_data.obj `if test -f 'press_data.cpp'; then $(CYGPATH_W) 'press_data.cpp'; else $(CYGPATH_W) '$(srcdir)/press_data.cpp'; fi`

blackjack-slot.o: slot.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-slot.o -MD -MP -MF $(DEPDIR)/blackjack-slot.Tpo -c -o blackjack-slot.o `test -f 'slot.cpp' || echo '$(srcdir)/'`slot.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-slot.Tpo $(DEPDIR)/blackjack-slot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='slot.cpp' object='blackjack-slot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-slot.o `test -f 'slot.cpp' || echo '$(srcdir)/'`slot.cpp

blackjack-slot.obj: slot.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-slot.obj -MD -MP -MF $(DEPDIR)/blackjack-slot.Tpo -c -o blackjack-slot.obj `if test -f 'slot.cpp'; then $(CYGPATH_W) 'slot.cpp'; else $(CYGPATH_W) '$(srcdir)/slot.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-slot.Tpo $(DEPDIR)/blackjack-slot.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='slot.cpp' object='blackjack-slot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-slot.obj `if test -f 'slot.cpp'; then $(CYGPATH_W) 'slot.cpp'; else $(CYGPATH_W) '$(srcdir)/slot.cpp'; fi`

blackjack-splash.o: splash.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-splash.o -MD -MP -MF $(DEPDIR)/blackjack-splash.Tpo -c -o blackjack-splash.o `test -f 'splash.cpp' || echo '$(srcdir)/'`splash.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-splash.Tpo $(DEPDIR)/blackjack-splash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='splash.cpp' object='blackjack-splash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-splash.o `test -f 'splash.cpp' || echo '$(srcdir)/'`splash.cpp

blackjack-splash.obj: splash.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-splash.obj -MD -MP -MF $(DEPDIR)/blackjack-splash.Tpo -c -o blackjack-splash.obj `if test -f 'splash.cpp'; then $(CYGPATH_W) 'splash.cpp'; else $(CYGPATH_W) '$(srcdir)/splash.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-splash.Tpo $(DEPDIR)/blackjack-splash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='splash.cpp' object='blackjack-splash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-splash.obj `if test -f 'splash.cpp'; then $(CYGPATH_W) 'splash.cpp'; else $(CYGPATH_W) '$(srcdir)/splash.cpp'; fi`

blackjack-strategy.o: strategy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-strategy.o -MD -MP -MF $(DEPDIR)/blackjack-strategy.Tpo -c -o blackjack-strategy.o `test -f 'strategy.cpp' || echo '$(srcdir)/'`strategy.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-strategy.Tpo $(DEPDIR)/blackjack-strategy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='strategy.cpp' object='blackjack-strategy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-strategy.o `test -f 'strategy.cpp' || echo '$(srcdir)/'`strategy.cpp

blackjack-strategy.obj: strategy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -MT blackjack-strategy.obj -MD -MP -MF $(DEPDIR)/blackjack-strategy.Tpo -c -o blackjack-strategy.obj `if test -f 'strategy.cpp'; then $(CYGPATH_W) 'strategy.cpp'; else $(CYGPATH_W) '$(srcdir)/strategy.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/blackjack-strategy.Tpo $(DEPDIR)/blackjack-strategy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='strategy.cpp' object='blackjack-strategy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(blackjack_CPPFLAGS) $(CPPFLAGS) $(blackjack_CXXFLAGS) $(CXXFLAGS) -c -o blackjack-strategy.obj `if test -f 'strategy.cpp'; then $(CYGPATH_W) 'strategy.cpp'; else $(CYGPATH_W) '$(srcdir)/strategy.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
