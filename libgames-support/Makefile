# Makefile.in generated by automake 1.10.2 from Makefile.am.
# libgames-support/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/gnome-games
pkglibdir = $(libdir)/gnome-games
pkgincludedir = $(includedir)/gnome-games
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
am__append_1 = \
	games-atk-utils.c		\
	games-atk-utils.h		\
	games-clock.c			\
	games-clock.h			\
	games-frame.c			\
	games-frame.h			\
	games-find-file.c		\
	games-find-file.h		\
	games-gridframe.c		\
	games-gridframe.h		\
	games-card-selector.c		\
	games-card-selector.h		\
	games-preimage.c                \
	games-preimage.h                \
	games-preimage-private.h	\
	games-score.h			\
	games-score.c			\
	games-scores.c			\
	games-scores.h			\
	games-scores-dialog.c		\
	games-scores-dialog.h		\
	games-scores-dialog-private.h	\
	games-controls.c		\
	games-controls.h		\
	games-setgid-io.c		\
	games-setgid-io.h		\
	games-scores-backend.c		\
	games-scores-backend.h		\
	$(NULL)

am__append_2 = \
	games-dlg-chat.c		\
	games-dlg-chat.h		\
	games-dlg-players.c		\
	games-dlg-players.h		\
	$(NULL)	

am__append_3 = \
	games-card-textures-cache.c	\
	games-card-textures-cache.h	\
	$(NULL)

am__append_4 = games-card-theme-preimage.c
am__append_5 = games-card-theme-svg.c
#am__append_6 = games-card-theme-kde.c
##am__append_7 = games-card-theme-preimage.c
#am__append_8 = games-card-theme-sliced.c
#am__append_9 = games-card-theme-pysol.c
#am__append_10 = games-card-theme-fixed.c
#am__append_11 = \
#	eggdesktopfile.c \
#	eggdesktopfile.h \
#	eggsmclient.c \
#	eggsmclient.h \
#	eggsmclient-private.h \
#	$(NULL)

#am__append_12 = $(SMCLIENT_CFLAGS)
#am__append_13 = $(SMCLIENT_LIBS)
##am__append_14 = eggsmclient-xsmp.c
##am__append_15 = -DEGG_SM_CLIENT_BACKEND_XSMP
##am__append_16 = eggsmclient-win32.c
##am__append_17 = eggsmclient-osx.c
am__append_18 = $(GNOME_CFLAGS)
am__append_19 = $(GNOME_LIBS)
am__append_20 = \
	$(GGZMOD_INCLUDES) 	\
	$(GGZ_GTK_INCLUDES) 	\
	$(GGZCORE_INCLUDES)	\
	$(LIBGGZ_INCLUDES)

am__append_21 = $(RSVG_CFLAGS)
am__append_22 = $(RSVG_LIBS)
am__append_23 = $(CLUTTER_CFLAGS)
am__append_24 = $(CLUTTER_LIBS)
am__append_25 = $(CANBERRA_GTK_CFLAGS)
am__append_26 = $(CANBERRA_GTK_LIBS)
#am__append_27 = $(SDL_MIXER_CFLAGS)
#am__append_28 = $(SDL_MIXER_LIBS)
#am__append_29 = $(DBUS_GLIB_CFLAGS)
#am__append_30 = $(DBUS_GLIB_LIBS)
util_PROGRAMS = gnome-games-render-cards$(EXEEXT)
am__append_31 = $(GHTREAD_CFLAGS)
am__append_32 = $(GTHREAD_LIBS)
subdir = libgames-support
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/c99.m4 $(top_srcdir)/m4/ggz.m4 \
	$(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/platform.m4 $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/m4/shave.m4 $(top_srcdir)/m4/sound.m4 \
	$(top_srcdir)/m4/system.m4 $(top_srcdir)/m4/tls.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_8 =  \
#	$(am__DEPENDENCIES_1)
libgames_support_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_7) \
	$(am__DEPENDENCIES_8)
am__libgames_support_la_SOURCES_DIST = games-marshal.c games-marshal.h \
	games-card.c games-card.h games-card-private.h \
	games-card-images.c games-card-images.h games-card-theme.c \
	games-card-theme.h games-card-theme-private.h \
	games-card-themes.c games-card-themes.h games-conf.c \
	games-conf.h games-debug.c games-debug.h games-files.c \
	games-files.h games-help.c games-help.h games-pixbuf-utils.c \
	games-pixbuf-utils.h games-profile.c games-profile.h \
	games-runtime.c games-runtime.h games-sound.c games-sound.h \
	games-stock.c games-stock.h games-string-utils.c \
	games-string-utils.h games-atk-utils.c games-atk-utils.h \
	games-clock.c games-clock.h games-frame.c games-frame.h \
	games-find-file.c games-find-file.h games-gridframe.c \
	games-gridframe.h games-card-selector.c games-card-selector.h \
	games-preimage.c games-preimage.h games-preimage-private.h \
	games-score.h games-score.c games-scores.c games-scores.h \
	games-scores-dialog.c games-scores-dialog.h \
	games-scores-dialog-private.h games-controls.c \
	games-controls.h games-setgid-io.c games-setgid-io.h \
	games-scores-backend.c games-scores-backend.h games-dlg-chat.c \
	games-dlg-chat.h games-dlg-players.c games-dlg-players.h \
	games-card-textures-cache.c games-card-textures-cache.h \
	games-card-theme-preimage.c games-card-theme-svg.c \
	games-card-theme-kde.c games-card-theme-sliced.c \
	games-card-theme-pysol.c games-card-theme-fixed.c \
	eggdesktopfile.c eggdesktopfile.h eggsmclient.c eggsmclient.h \
	eggsmclient-private.h eggsmclient-xsmp.c eggsmclient-win32.c \
	eggsmclient-osx.c
am__objects_1 =
am__objects_2 = libgames_support_la-games-marshal.lo $(am__objects_1)
am__objects_3 =  \
	libgames_support_la-games-atk-utils.lo \
	libgames_support_la-games-clock.lo \
	libgames_support_la-games-frame.lo \
	libgames_support_la-games-find-file.lo \
	libgames_support_la-games-gridframe.lo \
	libgames_support_la-games-card-selector.lo \
	libgames_support_la-games-preimage.lo \
	libgames_support_la-games-score.lo \
	libgames_support_la-games-scores.lo \
	libgames_support_la-games-scores-dialog.lo \
	libgames_support_la-games-controls.lo \
	libgames_support_la-games-setgid-io.lo \
	libgames_support_la-games-scores-backend.lo \
	$(am__objects_1)
am__objects_4 = libgames_support_la-games-dlg-chat.lo \
	libgames_support_la-games-dlg-players.lo \
	$(am__objects_1)
am__objects_5 = libgames_support_la-games-card-textures-cache.lo \
	$(am__objects_1)
am__objects_6 = libgames_support_la-games-card-theme-preimage.lo
am__objects_7 = libgames_support_la-games-card-theme-svg.lo
#am__objects_8 = libgames_support_la-games-card-theme-kde.lo
##am__objects_9 = libgames_support_la-games-card-theme-preimage.lo
#am__objects_10 = libgames_support_la-games-card-theme-sliced.lo
#am__objects_11 = libgames_support_la-games-card-theme-pysol.lo
#am__objects_12 = libgames_support_la-games-card-theme-fixed.lo
#am__objects_13 =  \
#	libgames_support_la-eggdesktopfile.lo \
#	libgames_support_la-eggsmclient.lo \
#	$(am__objects_1)
##am__objects_14 = libgames_support_la-eggsmclient-xsmp.lo
##am__objects_15 = libgames_support_la-eggsmclient-win32.lo
##am__objects_16 = libgames_support_la-eggsmclient-osx.lo
am_libgames_support_la_OBJECTS = $(am__objects_2) \
	libgames_support_la-games-card.lo \
	libgames_support_la-games-card-images.lo \
	libgames_support_la-games-card-theme.lo \
	libgames_support_la-games-card-themes.lo \
	libgames_support_la-games-conf.lo \
	libgames_support_la-games-debug.lo \
	libgames_support_la-games-files.lo \
	libgames_support_la-games-help.lo \
	libgames_support_la-games-pixbuf-utils.lo \
	libgames_support_la-games-profile.lo \
	libgames_support_la-games-runtime.lo \
	libgames_support_la-games-sound.lo \
	libgames_support_la-games-stock.lo \
	libgames_support_la-games-string-utils.lo $(am__objects_1) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15) $(am__objects_16)
libgames_support_la_OBJECTS = $(am_libgames_support_la_OBJECTS)
libgames_support_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libgames_support_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__installdirs = "$(DESTDIR)$(utildir)" "$(DESTDIR)$(carddir)" \
	"$(DESTDIR)$(slotdir)" "$(DESTDIR)$(themeinstalldir)"
utilPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(util_PROGRAMS)
am__gnome_games_render_cards_SOURCES_DIST = render-cards.c
am_gnome_games_render_cards_OBJECTS = gnome_games_render_cards-render-cards.$(OBJEXT)
gnome_games_render_cards_OBJECTS =  \
	$(am_gnome_games_render_cards_OBJECTS)
am__DEPENDENCIES_9 =  \
	$(am__DEPENDENCIES_1)
gnome_games_render_cards_DEPENDENCIES =  \
	libgames-support.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_9)
gnome_games_render_cards_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(gnome_games_render_cards_CFLAGS) $(CFLAGS) \
	$(gnome_games_render_cards_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libgames_support_la_SOURCES) \
	$(gnome_games_render_cards_SOURCES)
DIST_SOURCES = $(am__libgames_support_la_SOURCES_DIST) \
	$(am__gnome_games_render_cards_SOURCES_DIST)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
cardDATA_INSTALL = $(INSTALL_DATA)
slotDATA_INSTALL = $(INSTALL_DATA)
themeinstallDATA_INSTALL = $(INSTALL_DATA)
DATA = $(card_DATA) $(slot_DATA) $(themeinstall_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run aclocal-1.10
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run tar
AM_CFLAGS =  -Wall -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare 
AM_CPPFLAGS = 
AM_CXXFLAGS =  -g -O2 -fsigned-char -Wall -Wno-unused -Wshadow -Woverloaded-virtual 
AM_LDFLAGS = 
AM_MAKEFLAGS = `test -z $V && echo -s`
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run autoconf
AUTOHEADER = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run automake-1.10
AWK = gawk
CANBERRA_GTK_CFLAGS = -D_REENTRANT -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
CANBERRA_GTK_LIBS = -lcanberra-gtk -lcanberra -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CATALOGS = 
CATOBJEXT = .gmo
CC = /bin/sh /home/guillaume/Builds/gnome-games//shave cc gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fsigned-char -fsigned-char -D_REENTRANT
CHECK_CFLAGS =  
CHECK_LIBS = -lcheck  
CLUTTER_CFLAGS = -pthread -I/usr/include/clutter-0.9 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gtk-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/drm  
CLUTTER_GTK_CFLAGS = -pthread -I/usr/include/clutter-0.9/clutter-gtk -I/usr/include/clutter-0.9 -I/usr/include/gtk-2.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/drm -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0  
CLUTTER_GTK_LIBS = -pthread -lclutter-gtk-0.9 -lclutter-glx-0.9 -lgtk-x11-2.0 -lgthread-2.0 -lrt -lXi -lGL -lX11 -lXdamage -lXcomposite -lXfixes -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CLUTTER_LIBS = -pthread -lclutter-glx-0.9 -lpangocairo-1.0 -lgthread-2.0 -lrt -lXi -lGL -lX11 -lXdamage -lXcomposite -lgdk_pixbuf-2.0 -lpango-1.0 -lcairo -lXfixes -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CPP = gcc -E
CPPFLAGS =  -I /usr/include -I /usr/local/include
CXX = /bin/sh /home/guillaume/Builds/gnome-games//shave cxx g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -fsigned-char -fsigned-char
CYGPATH_W = echo
DATADIRNAME = share
DBUS_GLIB_CFLAGS = 
DBUS_GLIB_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_DEPRECATED = -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DPANGO_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGCONF_DISABLE_DEPRECATED -DBONOBO_DISABLE_DEPRECATED -DBONOBO_UI_DISABLE_DEPRECATED -DGNOME_VFS_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED -DLIBGLADE_DISABLE_DEPRECATED -DWNCK_DISABLE_DEPRECATED -DLIBSOUP_DISABLE_DEPRECATED
DISTCHECK_CONFIGURE_FLAGS = --disable-scrollkeeper 
DLLTOOL = dlltool
DOC_USER_FORMATS = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = /bin/sh /home/guillaume/Builds/gnome-games//shave f77 
FC = /bin/sh /home/guillaume/Builds/gnome-games//shave fc 
FGREP = /bin/grep -F
GCONFTOOL = /usr/bin/gconftool-2
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_PACKAGE = gnome-games
GGZDMOD_INCLUDES = 
GGZDMOD_LDFLAGS = 
GGZMOD_INCLUDES = -I /usr/include
GGZMOD_LDFLAGS = -L/usr/lib
GGZTLS_INCLUDES = 
GGZTLS_LDFLAGS = 
GGZ_CONFIG = /usr/bin/ggz-config
GGZ_GTK_INCLUDES = -I$(top_srcdir)/dependencies/ggz-gtk
GGZ_GTK_LDFLAGS = 
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GLIB_GENMARSHAL_INTERNAL = --internal
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GNOME_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_GAMES_GGZ_DSC_RULE = %.dsc:   %.dsc.in   ; $(SED) -e "s|@VERSION@|$(VERSION)|g" -e "s|@libexecdir@|$(libexecdir)|g" -e "s|@bindir@|$(bindir)|g" -e "s|@ggzexecmoddir@|$(ggzexecmoddir)|g"< $< > $@
GNOME_GAMES_GGZ_INTLTOOL_ROOM_RULE = %.room:   %.room.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
GNOME_LIBS = -lgconf-2 -lglib-2.0  
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GUILE = 
GUILE_CFLAGS = 
GUILE_CONFIG = 
GUILE_LIBS = 
HELP_DIR = ${datadir}/gnome/help
HILDON_CFLAGS = 
HILDON_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LD = /usr/bin/ld
LDADD =  -lnsl -lpthread
LDFLAGS =  -L/usr/lib -L/usr/local/lib
LIBGGZ_INCLUDES = -I /usr/include
LIBGGZ_LDFLAGS = -L/usr/lib
LIBOBJS = 
LIBS = 
LIBTOOL = /bin/sh /home/guillaume/Builds/gnome-games//shave-libtool '$(SHELL) $(top_builddir)/libtool'
LIB_ASYNC = 
LIB_GCRYPT = -lgcrypt
LIB_GGZ = -lggz
LIB_GGZDMOD = 
LIB_GGZMOD = -lggzmod
LIB_GGZTLS = 
LIB_GGZ_GTK = $(top_builddir)/dependencies/ggz-gtk/libggz-gtk.la
LIPO = 
LN_S = ln -s
LSB_RELEASE = /usr/bin/lsb_release
LTLIBOBJS = 
MAINT = 
MAKEFLAGS = -s
MAKEINFO = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = /bin/sh /home/guillaume/Builds/gnome-games//shave objc 
OBJDUMP = objdump
OBJEXT = o
OMF_DIR = ${datadir}/omf
OTOOL = 
OTOOL64 = 
PACKAGE = gnome-games
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-games
PACKAGE_NAME = GNOME Games
PACKAGE_STRING = GNOME Games 2.27.2
PACKAGE_TARNAME = gnome-games
PACKAGE_VERSION = 2.27.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGTK_CFLAGS = -I/usr/include/pygtk-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
PYGTK_LIBS = -lgobject-2.0 -lglib-2.0  
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
Q = $(V:1=)
RANLIB = ranlib
RSVG_CFLAGS = -I/usr/include/librsvg-2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
RSVG_LIBS = -lrsvg-2 -lgdk_pixbuf-2.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lcairo  
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_LIBS = 
SDL_MIXER_CFLAGS = 
SDL_MIXER_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SMCLIENT_CFLAGS = 
SMCLIENT_LIBS = 
STRIP = strip
USE_NLS = yes
V = @
VERSION = 2.27.2
WARN_CFLAGS = -Wall -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare 
WARN_CXXFLAGS = -g -O2 -fsigned-char -Wall -Wno-unused -Wshadow -Woverloaded-virtual 
XGETTEXT = /usr/bin/xgettext
XML_CFLAGS = 
XML_LIBS = 
abs_builddir = /home/guillaume/Builds/gnome-games/libgames-support
abs_srcdir = /home/guillaume/Builds/gnome-games/libgames-support
abs_top_builddir = /home/guillaume/Builds/gnome-games
abs_top_srcdir = /home/guillaume/Builds/gnome-games
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
allgames = aisleriot blackjack gnometris gnect gnomine same-gnome mahjongg gtali gnotravex gnotski glines iagno glchess gnobots2 gnibbles gnome-sudoku
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gamelist = gnibbles gnometris
ggz_config = /usr/bin
ggzdatadir = /usr/share/ggz
ggzdconfdir = 
ggzddatadir = 
ggzdexecmoddir = 
ggzdexecmodpath = 
ggzdmod_includes = 
ggzdmod_libraries = 
ggzexecmoddir = /usr/lib/ggz
ggzmod_includes = /usr/include
ggzmod_libraries = /usr/lib
ggzmoduleconfdir = /usr/etc
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guillaume/Builds/gnome-games/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libggz_includes = /usr/include
libggz_libraries = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
packagesrcdir = /home/guillaume/Builds/gnome-games
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gnome-games
pkgpythondir = ${pythondir}/gnome-games
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
scoredir = ${localstatedir}/games
scores_group = games
scores_user = games
setgid = true
sharedstatedir = ${prefix}/com
shavedir = /home/guillaume/Builds/gnome-games/
srcdir = .
staginggames = lightsoff
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
NULL = 
commondatadir = $(datadir)/gnome-games-common
carddir = $(commondatadir)/cards
card_DATA = \
	gnomangelo_bitmap.svg	\
	$(NULL)

themeinstalldir = $(commondatadir)
themeinstall_DATA = theme-install.ini
slotdir = $(pkgdatadir)/pixmaps
slot_DATA = slot.svg
EXTRA_DIST = \
	$(schema_in_files)	\
	$(card_DATA)		\
	$(slot_DATA)		\
	$(themeinstall_DATA)	\
	games-marshal.list	\
	$(NULL)

noinst_LTLIBRARIES = libgames-support.la
BUILT_SOURCES = \
	games-marshal.c			\
	games-marshal.h			\
	$(NULL)

libgames_support_la_SOURCES = $(BUILT_SOURCES) games-card.c \
	games-card.h games-card-private.h games-card-images.c \
	games-card-images.h games-card-theme.c games-card-theme.h \
	games-card-theme-private.h games-card-themes.c \
	games-card-themes.h games-conf.c games-conf.h games-debug.c \
	games-debug.h games-files.c games-files.h games-help.c \
	games-help.h games-pixbuf-utils.c games-pixbuf-utils.h \
	games-profile.c games-profile.h games-runtime.c \
	games-runtime.h games-sound.c games-sound.h games-stock.c \
	games-stock.h games-string-utils.c games-string-utils.h \
	$(NULL) $(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_7) $(am__append_8) $(am__append_9) \
	$(am__append_10) $(am__append_11) $(am__append_14) \
	$(am__append_16) $(am__append_17)
libgames_support_la_CPPFLAGS = -DPKGDATADIR="\"$(pkgdatadir)\"" \
	-DDATADIR="\"$(datadir)\"" \
	-DCOMMON_DATADIR="\"$(datadir)/gnome-games-common\"" \
	-DSCORESDIR="\"$(scoredir)\"" $(NULL) $(am__append_15)
libgames_support_la_CFLAGS = $(GTK_CFLAGS) $(AM_CFLAGS) \
	$(am__append_12) $(am__append_18) $(am__append_20) \
	$(am__append_21) $(am__append_23) $(am__append_25) \
	$(am__append_27) $(am__append_29)
libgames_support_la_LIBADD = $(GTK_LIBS) $(am__append_13) \
	$(am__append_19) $(am__append_22) $(am__append_24) \
	$(am__append_26) $(am__append_28) $(am__append_30)

# Auxiliary programme to prerender card images
utildir = $(pkglibdir)
gnome_games_render_cards_SOURCES = \
	render-cards.c

gnome_games_render_cards_CPPFLAGS = \
	$(AM_CPPFLAGS)

gnome_games_render_cards_CFLAGS = $(GTK_CFLAGS) \
	$(RSVG_CFLAGS) $(AM_CFLAGS) $(am__append_31)
gnome_games_render_cards_LDFLAGS = \
	$(AM_LDFLAGS)

gnome_games_render_cards_LDADD = libgames-support.la \
	$(GTK_LIBS) $(RSVG_LIBS) $(am__append_32)
stamp_files = \
	stamp-games-marshal.c \
	stamp-games-marshal.h \
	$(NULL)

CLEANFILES = \
	$(BUILT_SOURCES) \
	$(stamp_files) \
	$(NULL)

DISTCLEANFILES = $(schema_DATA)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  libgames-support/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libgames-support/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgames-support.la: $(libgames_support_la_OBJECTS) $(libgames_support_la_DEPENDENCIES) 
	$(libgames_support_la_LINK)  $(libgames_support_la_OBJECTS) $(libgames_support_la_LIBADD) $(LIBS)
install-utilPROGRAMS: $(util_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(utildir)" || $(MKDIR_P) "$(DESTDIR)$(utildir)"
	@list='$(util_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(utilPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(utildir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(utilPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(utildir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-utilPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(util_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(utildir)/$$f'"; \
	  rm -f "$(DESTDIR)$(utildir)/$$f"; \
	done

clean-utilPROGRAMS:
	@list='$(util_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
gnome-games-render-cards$(EXEEXT): $(gnome_games_render_cards_OBJECTS) $(gnome_games_render_cards_DEPENDENCIES) 
	@rm -f gnome-games-render-cards$(EXEEXT)
	$(gnome_games_render_cards_LINK) $(gnome_games_render_cards_OBJECTS) $(gnome_games_render_cards_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gnome_games_render_cards-render-cards.Po
include ./$(DEPDIR)/libgames_support_la-eggdesktopfile.Plo
include ./$(DEPDIR)/libgames_support_la-eggsmclient-osx.Plo
include ./$(DEPDIR)/libgames_support_la-eggsmclient-win32.Plo
include ./$(DEPDIR)/libgames_support_la-eggsmclient-xsmp.Plo
include ./$(DEPDIR)/libgames_support_la-eggsmclient.Plo
include ./$(DEPDIR)/libgames_support_la-games-atk-utils.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-images.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-selector.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-textures-cache.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme-fixed.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme-kde.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme-preimage.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme-pysol.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme-sliced.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme-svg.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-theme.Plo
include ./$(DEPDIR)/libgames_support_la-games-card-themes.Plo
include ./$(DEPDIR)/libgames_support_la-games-card.Plo
include ./$(DEPDIR)/libgames_support_la-games-clock.Plo
include ./$(DEPDIR)/libgames_support_la-games-conf.Plo
include ./$(DEPDIR)/libgames_support_la-games-controls.Plo
include ./$(DEPDIR)/libgames_support_la-games-debug.Plo
include ./$(DEPDIR)/libgames_support_la-games-dlg-chat.Plo
include ./$(DEPDIR)/libgames_support_la-games-dlg-players.Plo
include ./$(DEPDIR)/libgames_support_la-games-files.Plo
include ./$(DEPDIR)/libgames_support_la-games-find-file.Plo
include ./$(DEPDIR)/libgames_support_la-games-frame.Plo
include ./$(DEPDIR)/libgames_support_la-games-gridframe.Plo
include ./$(DEPDIR)/libgames_support_la-games-help.Plo
include ./$(DEPDIR)/libgames_support_la-games-marshal.Plo
include ./$(DEPDIR)/libgames_support_la-games-pixbuf-utils.Plo
include ./$(DEPDIR)/libgames_support_la-games-preimage.Plo
include ./$(DEPDIR)/libgames_support_la-games-profile.Plo
include ./$(DEPDIR)/libgames_support_la-games-runtime.Plo
include ./$(DEPDIR)/libgames_support_la-games-score.Plo
include ./$(DEPDIR)/libgames_support_la-games-scores-backend.Plo
include ./$(DEPDIR)/libgames_support_la-games-scores-dialog.Plo
include ./$(DEPDIR)/libgames_support_la-games-scores.Plo
include ./$(DEPDIR)/libgames_support_la-games-setgid-io.Plo
include ./$(DEPDIR)/libgames_support_la-games-sound.Plo
include ./$(DEPDIR)/libgames_support_la-games-stock.Plo
include ./$(DEPDIR)/libgames_support_la-games-string-utils.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libgames_support_la-games-marshal.lo: games-marshal.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-marshal.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-marshal.Tpo -c -o libgames_support_la-games-marshal.lo `test -f 'games-marshal.c' || echo '$(srcdir)/'`games-marshal.c
	mv -f $(DEPDIR)/libgames_support_la-games-marshal.Tpo $(DEPDIR)/libgames_support_la-games-marshal.Plo
#	source='games-marshal.c' object='libgames_support_la-games-marshal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-marshal.lo `test -f 'games-marshal.c' || echo '$(srcdir)/'`games-marshal.c

libgames_support_la-games-card.lo: games-card.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card.Tpo -c -o libgames_support_la-games-card.lo `test -f 'games-card.c' || echo '$(srcdir)/'`games-card.c
	mv -f $(DEPDIR)/libgames_support_la-games-card.Tpo $(DEPDIR)/libgames_support_la-games-card.Plo
#	source='games-card.c' object='libgames_support_la-games-card.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card.lo `test -f 'games-card.c' || echo '$(srcdir)/'`games-card.c

libgames_support_la-games-card-images.lo: games-card-images.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-images.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-images.Tpo -c -o libgames_support_la-games-card-images.lo `test -f 'games-card-images.c' || echo '$(srcdir)/'`games-card-images.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-images.Tpo $(DEPDIR)/libgames_support_la-games-card-images.Plo
#	source='games-card-images.c' object='libgames_support_la-games-card-images.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-images.lo `test -f 'games-card-images.c' || echo '$(srcdir)/'`games-card-images.c

libgames_support_la-games-card-theme.lo: games-card-theme.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme.Tpo -c -o libgames_support_la-games-card-theme.lo `test -f 'games-card-theme.c' || echo '$(srcdir)/'`games-card-theme.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme.Tpo $(DEPDIR)/libgames_support_la-games-card-theme.Plo
#	source='games-card-theme.c' object='libgames_support_la-games-card-theme.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme.lo `test -f 'games-card-theme.c' || echo '$(srcdir)/'`games-card-theme.c

libgames_support_la-games-card-themes.lo: games-card-themes.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-themes.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-themes.Tpo -c -o libgames_support_la-games-card-themes.lo `test -f 'games-card-themes.c' || echo '$(srcdir)/'`games-card-themes.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-themes.Tpo $(DEPDIR)/libgames_support_la-games-card-themes.Plo
#	source='games-card-themes.c' object='libgames_support_la-games-card-themes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-themes.lo `test -f 'games-card-themes.c' || echo '$(srcdir)/'`games-card-themes.c

libgames_support_la-games-conf.lo: games-conf.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-conf.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-conf.Tpo -c -o libgames_support_la-games-conf.lo `test -f 'games-conf.c' || echo '$(srcdir)/'`games-conf.c
	mv -f $(DEPDIR)/libgames_support_la-games-conf.Tpo $(DEPDIR)/libgames_support_la-games-conf.Plo
#	source='games-conf.c' object='libgames_support_la-games-conf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-conf.lo `test -f 'games-conf.c' || echo '$(srcdir)/'`games-conf.c

libgames_support_la-games-debug.lo: games-debug.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-debug.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-debug.Tpo -c -o libgames_support_la-games-debug.lo `test -f 'games-debug.c' || echo '$(srcdir)/'`games-debug.c
	mv -f $(DEPDIR)/libgames_support_la-games-debug.Tpo $(DEPDIR)/libgames_support_la-games-debug.Plo
#	source='games-debug.c' object='libgames_support_la-games-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-debug.lo `test -f 'games-debug.c' || echo '$(srcdir)/'`games-debug.c

libgames_support_la-games-files.lo: games-files.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-files.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-files.Tpo -c -o libgames_support_la-games-files.lo `test -f 'games-files.c' || echo '$(srcdir)/'`games-files.c
	mv -f $(DEPDIR)/libgames_support_la-games-files.Tpo $(DEPDIR)/libgames_support_la-games-files.Plo
#	source='games-files.c' object='libgames_support_la-games-files.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-files.lo `test -f 'games-files.c' || echo '$(srcdir)/'`games-files.c

libgames_support_la-games-help.lo: games-help.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-help.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-help.Tpo -c -o libgames_support_la-games-help.lo `test -f 'games-help.c' || echo '$(srcdir)/'`games-help.c
	mv -f $(DEPDIR)/libgames_support_la-games-help.Tpo $(DEPDIR)/libgames_support_la-games-help.Plo
#	source='games-help.c' object='libgames_support_la-games-help.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-help.lo `test -f 'games-help.c' || echo '$(srcdir)/'`games-help.c

libgames_support_la-games-pixbuf-utils.lo: games-pixbuf-utils.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-pixbuf-utils.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-pixbuf-utils.Tpo -c -o libgames_support_la-games-pixbuf-utils.lo `test -f 'games-pixbuf-utils.c' || echo '$(srcdir)/'`games-pixbuf-utils.c
	mv -f $(DEPDIR)/libgames_support_la-games-pixbuf-utils.Tpo $(DEPDIR)/libgames_support_la-games-pixbuf-utils.Plo
#	source='games-pixbuf-utils.c' object='libgames_support_la-games-pixbuf-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-pixbuf-utils.lo `test -f 'games-pixbuf-utils.c' || echo '$(srcdir)/'`games-pixbuf-utils.c

libgames_support_la-games-profile.lo: games-profile.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-profile.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-profile.Tpo -c -o libgames_support_la-games-profile.lo `test -f 'games-profile.c' || echo '$(srcdir)/'`games-profile.c
	mv -f $(DEPDIR)/libgames_support_la-games-profile.Tpo $(DEPDIR)/libgames_support_la-games-profile.Plo
#	source='games-profile.c' object='libgames_support_la-games-profile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-profile.lo `test -f 'games-profile.c' || echo '$(srcdir)/'`games-profile.c

libgames_support_la-games-runtime.lo: games-runtime.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-runtime.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-runtime.Tpo -c -o libgames_support_la-games-runtime.lo `test -f 'games-runtime.c' || echo '$(srcdir)/'`games-runtime.c
	mv -f $(DEPDIR)/libgames_support_la-games-runtime.Tpo $(DEPDIR)/libgames_support_la-games-runtime.Plo
#	source='games-runtime.c' object='libgames_support_la-games-runtime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-runtime.lo `test -f 'games-runtime.c' || echo '$(srcdir)/'`games-runtime.c

libgames_support_la-games-sound.lo: games-sound.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-sound.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-sound.Tpo -c -o libgames_support_la-games-sound.lo `test -f 'games-sound.c' || echo '$(srcdir)/'`games-sound.c
	mv -f $(DEPDIR)/libgames_support_la-games-sound.Tpo $(DEPDIR)/libgames_support_la-games-sound.Plo
#	source='games-sound.c' object='libgames_support_la-games-sound.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-sound.lo `test -f 'games-sound.c' || echo '$(srcdir)/'`games-sound.c

libgames_support_la-games-stock.lo: games-stock.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-stock.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-stock.Tpo -c -o libgames_support_la-games-stock.lo `test -f 'games-stock.c' || echo '$(srcdir)/'`games-stock.c
	mv -f $(DEPDIR)/libgames_support_la-games-stock.Tpo $(DEPDIR)/libgames_support_la-games-stock.Plo
#	source='games-stock.c' object='libgames_support_la-games-stock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-stock.lo `test -f 'games-stock.c' || echo '$(srcdir)/'`games-stock.c

libgames_support_la-games-string-utils.lo: games-string-utils.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-string-utils.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-string-utils.Tpo -c -o libgames_support_la-games-string-utils.lo `test -f 'games-string-utils.c' || echo '$(srcdir)/'`games-string-utils.c
	mv -f $(DEPDIR)/libgames_support_la-games-string-utils.Tpo $(DEPDIR)/libgames_support_la-games-string-utils.Plo
#	source='games-string-utils.c' object='libgames_support_la-games-string-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-string-utils.lo `test -f 'games-string-utils.c' || echo '$(srcdir)/'`games-string-utils.c

libgames_support_la-games-atk-utils.lo: games-atk-utils.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-atk-utils.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-atk-utils.Tpo -c -o libgames_support_la-games-atk-utils.lo `test -f 'games-atk-utils.c' || echo '$(srcdir)/'`games-atk-utils.c
	mv -f $(DEPDIR)/libgames_support_la-games-atk-utils.Tpo $(DEPDIR)/libgames_support_la-games-atk-utils.Plo
#	source='games-atk-utils.c' object='libgames_support_la-games-atk-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-atk-utils.lo `test -f 'games-atk-utils.c' || echo '$(srcdir)/'`games-atk-utils.c

libgames_support_la-games-clock.lo: games-clock.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-clock.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-clock.Tpo -c -o libgames_support_la-games-clock.lo `test -f 'games-clock.c' || echo '$(srcdir)/'`games-clock.c
	mv -f $(DEPDIR)/libgames_support_la-games-clock.Tpo $(DEPDIR)/libgames_support_la-games-clock.Plo
#	source='games-clock.c' object='libgames_support_la-games-clock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-clock.lo `test -f 'games-clock.c' || echo '$(srcdir)/'`games-clock.c

libgames_support_la-games-frame.lo: games-frame.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-frame.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-frame.Tpo -c -o libgames_support_la-games-frame.lo `test -f 'games-frame.c' || echo '$(srcdir)/'`games-frame.c
	mv -f $(DEPDIR)/libgames_support_la-games-frame.Tpo $(DEPDIR)/libgames_support_la-games-frame.Plo
#	source='games-frame.c' object='libgames_support_la-games-frame.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-frame.lo `test -f 'games-frame.c' || echo '$(srcdir)/'`games-frame.c

libgames_support_la-games-find-file.lo: games-find-file.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-find-file.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-find-file.Tpo -c -o libgames_support_la-games-find-file.lo `test -f 'games-find-file.c' || echo '$(srcdir)/'`games-find-file.c
	mv -f $(DEPDIR)/libgames_support_la-games-find-file.Tpo $(DEPDIR)/libgames_support_la-games-find-file.Plo
#	source='games-find-file.c' object='libgames_support_la-games-find-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-find-file.lo `test -f 'games-find-file.c' || echo '$(srcdir)/'`games-find-file.c

libgames_support_la-games-gridframe.lo: games-gridframe.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-gridframe.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-gridframe.Tpo -c -o libgames_support_la-games-gridframe.lo `test -f 'games-gridframe.c' || echo '$(srcdir)/'`games-gridframe.c
	mv -f $(DEPDIR)/libgames_support_la-games-gridframe.Tpo $(DEPDIR)/libgames_support_la-games-gridframe.Plo
#	source='games-gridframe.c' object='libgames_support_la-games-gridframe.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-gridframe.lo `test -f 'games-gridframe.c' || echo '$(srcdir)/'`games-gridframe.c

libgames_support_la-games-card-selector.lo: games-card-selector.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-selector.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-selector.Tpo -c -o libgames_support_la-games-card-selector.lo `test -f 'games-card-selector.c' || echo '$(srcdir)/'`games-card-selector.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-selector.Tpo $(DEPDIR)/libgames_support_la-games-card-selector.Plo
#	source='games-card-selector.c' object='libgames_support_la-games-card-selector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-selector.lo `test -f 'games-card-selector.c' || echo '$(srcdir)/'`games-card-selector.c

libgames_support_la-games-preimage.lo: games-preimage.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-preimage.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-preimage.Tpo -c -o libgames_support_la-games-preimage.lo `test -f 'games-preimage.c' || echo '$(srcdir)/'`games-preimage.c
	mv -f $(DEPDIR)/libgames_support_la-games-preimage.Tpo $(DEPDIR)/libgames_support_la-games-preimage.Plo
#	source='games-preimage.c' object='libgames_support_la-games-preimage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-preimage.lo `test -f 'games-preimage.c' || echo '$(srcdir)/'`games-preimage.c

libgames_support_la-games-score.lo: games-score.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-score.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-score.Tpo -c -o libgames_support_la-games-score.lo `test -f 'games-score.c' || echo '$(srcdir)/'`games-score.c
	mv -f $(DEPDIR)/libgames_support_la-games-score.Tpo $(DEPDIR)/libgames_support_la-games-score.Plo
#	source='games-score.c' object='libgames_support_la-games-score.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-score.lo `test -f 'games-score.c' || echo '$(srcdir)/'`games-score.c

libgames_support_la-games-scores.lo: games-scores.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-scores.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-scores.Tpo -c -o libgames_support_la-games-scores.lo `test -f 'games-scores.c' || echo '$(srcdir)/'`games-scores.c
	mv -f $(DEPDIR)/libgames_support_la-games-scores.Tpo $(DEPDIR)/libgames_support_la-games-scores.Plo
#	source='games-scores.c' object='libgames_support_la-games-scores.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-scores.lo `test -f 'games-scores.c' || echo '$(srcdir)/'`games-scores.c

libgames_support_la-games-scores-dialog.lo: games-scores-dialog.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-scores-dialog.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-scores-dialog.Tpo -c -o libgames_support_la-games-scores-dialog.lo `test -f 'games-scores-dialog.c' || echo '$(srcdir)/'`games-scores-dialog.c
	mv -f $(DEPDIR)/libgames_support_la-games-scores-dialog.Tpo $(DEPDIR)/libgames_support_la-games-scores-dialog.Plo
#	source='games-scores-dialog.c' object='libgames_support_la-games-scores-dialog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-scores-dialog.lo `test -f 'games-scores-dialog.c' || echo '$(srcdir)/'`games-scores-dialog.c

libgames_support_la-games-controls.lo: games-controls.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-controls.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-controls.Tpo -c -o libgames_support_la-games-controls.lo `test -f 'games-controls.c' || echo '$(srcdir)/'`games-controls.c
	mv -f $(DEPDIR)/libgames_support_la-games-controls.Tpo $(DEPDIR)/libgames_support_la-games-controls.Plo
#	source='games-controls.c' object='libgames_support_la-games-controls.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-controls.lo `test -f 'games-controls.c' || echo '$(srcdir)/'`games-controls.c

libgames_support_la-games-setgid-io.lo: games-setgid-io.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-setgid-io.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-setgid-io.Tpo -c -o libgames_support_la-games-setgid-io.lo `test -f 'games-setgid-io.c' || echo '$(srcdir)/'`games-setgid-io.c
	mv -f $(DEPDIR)/libgames_support_la-games-setgid-io.Tpo $(DEPDIR)/libgames_support_la-games-setgid-io.Plo
#	source='games-setgid-io.c' object='libgames_support_la-games-setgid-io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-setgid-io.lo `test -f 'games-setgid-io.c' || echo '$(srcdir)/'`games-setgid-io.c

libgames_support_la-games-scores-backend.lo: games-scores-backend.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-scores-backend.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-scores-backend.Tpo -c -o libgames_support_la-games-scores-backend.lo `test -f 'games-scores-backend.c' || echo '$(srcdir)/'`games-scores-backend.c
	mv -f $(DEPDIR)/libgames_support_la-games-scores-backend.Tpo $(DEPDIR)/libgames_support_la-games-scores-backend.Plo
#	source='games-scores-backend.c' object='libgames_support_la-games-scores-backend.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-scores-backend.lo `test -f 'games-scores-backend.c' || echo '$(srcdir)/'`games-scores-backend.c

libgames_support_la-games-dlg-chat.lo: games-dlg-chat.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-dlg-chat.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-dlg-chat.Tpo -c -o libgames_support_la-games-dlg-chat.lo `test -f 'games-dlg-chat.c' || echo '$(srcdir)/'`games-dlg-chat.c
	mv -f $(DEPDIR)/libgames_support_la-games-dlg-chat.Tpo $(DEPDIR)/libgames_support_la-games-dlg-chat.Plo
#	source='games-dlg-chat.c' object='libgames_support_la-games-dlg-chat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-dlg-chat.lo `test -f 'games-dlg-chat.c' || echo '$(srcdir)/'`games-dlg-chat.c

libgames_support_la-games-dlg-players.lo: games-dlg-players.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-dlg-players.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-dlg-players.Tpo -c -o libgames_support_la-games-dlg-players.lo `test -f 'games-dlg-players.c' || echo '$(srcdir)/'`games-dlg-players.c
	mv -f $(DEPDIR)/libgames_support_la-games-dlg-players.Tpo $(DEPDIR)/libgames_support_la-games-dlg-players.Plo
#	source='games-dlg-players.c' object='libgames_support_la-games-dlg-players.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-dlg-players.lo `test -f 'games-dlg-players.c' || echo '$(srcdir)/'`games-dlg-players.c

libgames_support_la-games-card-textures-cache.lo: games-card-textures-cache.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-textures-cache.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-textures-cache.Tpo -c -o libgames_support_la-games-card-textures-cache.lo `test -f 'games-card-textures-cache.c' || echo '$(srcdir)/'`games-card-textures-cache.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-textures-cache.Tpo $(DEPDIR)/libgames_support_la-games-card-textures-cache.Plo
#	source='games-card-textures-cache.c' object='libgames_support_la-games-card-textures-cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-textures-cache.lo `test -f 'games-card-textures-cache.c' || echo '$(srcdir)/'`games-card-textures-cache.c

libgames_support_la-games-card-theme-preimage.lo: games-card-theme-preimage.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme-preimage.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme-preimage.Tpo -c -o libgames_support_la-games-card-theme-preimage.lo `test -f 'games-card-theme-preimage.c' || echo '$(srcdir)/'`games-card-theme-preimage.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme-preimage.Tpo $(DEPDIR)/libgames_support_la-games-card-theme-preimage.Plo
#	source='games-card-theme-preimage.c' object='libgames_support_la-games-card-theme-preimage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme-preimage.lo `test -f 'games-card-theme-preimage.c' || echo '$(srcdir)/'`games-card-theme-preimage.c

libgames_support_la-games-card-theme-svg.lo: games-card-theme-svg.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme-svg.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme-svg.Tpo -c -o libgames_support_la-games-card-theme-svg.lo `test -f 'games-card-theme-svg.c' || echo '$(srcdir)/'`games-card-theme-svg.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme-svg.Tpo $(DEPDIR)/libgames_support_la-games-card-theme-svg.Plo
#	source='games-card-theme-svg.c' object='libgames_support_la-games-card-theme-svg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme-svg.lo `test -f 'games-card-theme-svg.c' || echo '$(srcdir)/'`games-card-theme-svg.c

libgames_support_la-games-card-theme-kde.lo: games-card-theme-kde.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme-kde.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme-kde.Tpo -c -o libgames_support_la-games-card-theme-kde.lo `test -f 'games-card-theme-kde.c' || echo '$(srcdir)/'`games-card-theme-kde.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme-kde.Tpo $(DEPDIR)/libgames_support_la-games-card-theme-kde.Plo
#	source='games-card-theme-kde.c' object='libgames_support_la-games-card-theme-kde.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme-kde.lo `test -f 'games-card-theme-kde.c' || echo '$(srcdir)/'`games-card-theme-kde.c

libgames_support_la-games-card-theme-sliced.lo: games-card-theme-sliced.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme-sliced.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme-sliced.Tpo -c -o libgames_support_la-games-card-theme-sliced.lo `test -f 'games-card-theme-sliced.c' || echo '$(srcdir)/'`games-card-theme-sliced.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme-sliced.Tpo $(DEPDIR)/libgames_support_la-games-card-theme-sliced.Plo
#	source='games-card-theme-sliced.c' object='libgames_support_la-games-card-theme-sliced.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme-sliced.lo `test -f 'games-card-theme-sliced.c' || echo '$(srcdir)/'`games-card-theme-sliced.c

libgames_support_la-games-card-theme-pysol.lo: games-card-theme-pysol.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme-pysol.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme-pysol.Tpo -c -o libgames_support_la-games-card-theme-pysol.lo `test -f 'games-card-theme-pysol.c' || echo '$(srcdir)/'`games-card-theme-pysol.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme-pysol.Tpo $(DEPDIR)/libgames_support_la-games-card-theme-pysol.Plo
#	source='games-card-theme-pysol.c' object='libgames_support_la-games-card-theme-pysol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme-pysol.lo `test -f 'games-card-theme-pysol.c' || echo '$(srcdir)/'`games-card-theme-pysol.c

libgames_support_la-games-card-theme-fixed.lo: games-card-theme-fixed.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-games-card-theme-fixed.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-games-card-theme-fixed.Tpo -c -o libgames_support_la-games-card-theme-fixed.lo `test -f 'games-card-theme-fixed.c' || echo '$(srcdir)/'`games-card-theme-fixed.c
	mv -f $(DEPDIR)/libgames_support_la-games-card-theme-fixed.Tpo $(DEPDIR)/libgames_support_la-games-card-theme-fixed.Plo
#	source='games-card-theme-fixed.c' object='libgames_support_la-games-card-theme-fixed.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-games-card-theme-fixed.lo `test -f 'games-card-theme-fixed.c' || echo '$(srcdir)/'`games-card-theme-fixed.c

libgames_support_la-eggdesktopfile.lo: eggdesktopfile.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-eggdesktopfile.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-eggdesktopfile.Tpo -c -o libgames_support_la-eggdesktopfile.lo `test -f 'eggdesktopfile.c' || echo '$(srcdir)/'`eggdesktopfile.c
	mv -f $(DEPDIR)/libgames_support_la-eggdesktopfile.Tpo $(DEPDIR)/libgames_support_la-eggdesktopfile.Plo
#	source='eggdesktopfile.c' object='libgames_support_la-eggdesktopfile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-eggdesktopfile.lo `test -f 'eggdesktopfile.c' || echo '$(srcdir)/'`eggdesktopfile.c

libgames_support_la-eggsmclient.lo: eggsmclient.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-eggsmclient.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-eggsmclient.Tpo -c -o libgames_support_la-eggsmclient.lo `test -f 'eggsmclient.c' || echo '$(srcdir)/'`eggsmclient.c
	mv -f $(DEPDIR)/libgames_support_la-eggsmclient.Tpo $(DEPDIR)/libgames_support_la-eggsmclient.Plo
#	source='eggsmclient.c' object='libgames_support_la-eggsmclient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-eggsmclient.lo `test -f 'eggsmclient.c' || echo '$(srcdir)/'`eggsmclient.c

libgames_support_la-eggsmclient-xsmp.lo: eggsmclient-xsmp.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-eggsmclient-xsmp.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-eggsmclient-xsmp.Tpo -c -o libgames_support_la-eggsmclient-xsmp.lo `test -f 'eggsmclient-xsmp.c' || echo '$(srcdir)/'`eggsmclient-xsmp.c
	mv -f $(DEPDIR)/libgames_support_la-eggsmclient-xsmp.Tpo $(DEPDIR)/libgames_support_la-eggsmclient-xsmp.Plo
#	source='eggsmclient-xsmp.c' object='libgames_support_la-eggsmclient-xsmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-eggsmclient-xsmp.lo `test -f 'eggsmclient-xsmp.c' || echo '$(srcdir)/'`eggsmclient-xsmp.c

libgames_support_la-eggsmclient-win32.lo: eggsmclient-win32.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-eggsmclient-win32.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-eggsmclient-win32.Tpo -c -o libgames_support_la-eggsmclient-win32.lo `test -f 'eggsmclient-win32.c' || echo '$(srcdir)/'`eggsmclient-win32.c
	mv -f $(DEPDIR)/libgames_support_la-eggsmclient-win32.Tpo $(DEPDIR)/libgames_support_la-eggsmclient-win32.Plo
#	source='eggsmclient-win32.c' object='libgames_support_la-eggsmclient-win32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-eggsmclient-win32.lo `test -f 'eggsmclient-win32.c' || echo '$(srcdir)/'`eggsmclient-win32.c

libgames_support_la-eggsmclient-osx.lo: eggsmclient-osx.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -MT libgames_support_la-eggsmclient-osx.lo -MD -MP -MF $(DEPDIR)/libgames_support_la-eggsmclient-osx.Tpo -c -o libgames_support_la-eggsmclient-osx.lo `test -f 'eggsmclient-osx.c' || echo '$(srcdir)/'`eggsmclient-osx.c
	mv -f $(DEPDIR)/libgames_support_la-eggsmclient-osx.Tpo $(DEPDIR)/libgames_support_la-eggsmclient-osx.Plo
#	source='eggsmclient-osx.c' object='libgames_support_la-eggsmclient-osx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgames_support_la_CPPFLAGS) $(CPPFLAGS) $(libgames_support_la_CFLAGS) $(CFLAGS) -c -o libgames_support_la-eggsmclient-osx.lo `test -f 'eggsmclient-osx.c' || echo '$(srcdir)/'`eggsmclient-osx.c

gnome_games_render_cards-render-cards.o: render-cards.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gnome_games_render_cards_CPPFLAGS) $(CPPFLAGS) $(gnome_games_render_cards_CFLAGS) $(CFLAGS) -MT gnome_games_render_cards-render-cards.o -MD -MP -MF $(DEPDIR)/gnome_games_render_cards-render-cards.Tpo -c -o gnome_games_render_cards-render-cards.o `test -f 'render-cards.c' || echo '$(srcdir)/'`render-cards.c
	mv -f $(DEPDIR)/gnome_games_render_cards-render-cards.Tpo $(DEPDIR)/gnome_games_render_cards-render-cards.Po
#	source='render-cards.c' object='gnome_games_render_cards-render-cards.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gnome_games_render_cards_CPPFLAGS) $(CPPFLAGS) $(gnome_games_render_cards_CFLAGS) $(CFLAGS) -c -o gnome_games_render_cards-render-cards.o `test -f 'render-cards.c' || echo '$(srcdir)/'`render-cards.c

gnome_games_render_cards-render-cards.obj: render-cards.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gnome_games_render_cards_CPPFLAGS) $(CPPFLAGS) $(gnome_games_render_cards_CFLAGS) $(CFLAGS) -MT gnome_games_render_cards-render-cards.obj -MD -MP -MF $(DEPDIR)/gnome_games_render_cards-render-cards.Tpo -c -o gnome_games_render_cards-render-cards.obj `if test -f 'render-cards.c'; then $(CYGPATH_W) 'render-cards.c'; else $(CYGPATH_W) '$(srcdir)/render-cards.c'; fi`
	mv -f $(DEPDIR)/gnome_games_render_cards-render-cards.Tpo $(DEPDIR)/gnome_games_render_cards-render-cards.Po
#	source='render-cards.c' object='gnome_games_render_cards-render-cards.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gnome_games_render_cards_CPPFLAGS) $(CPPFLAGS) $(gnome_games_render_cards_CFLAGS) $(CFLAGS) -c -o gnome_games_render_cards-render-cards.obj `if test -f 'render-cards.c'; then $(CYGPATH_W) 'render-cards.c'; else $(CYGPATH_W) '$(srcdir)/render-cards.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-cardDATA: $(card_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(carddir)" || $(MKDIR_P) "$(DESTDIR)$(carddir)"
	@list='$(card_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(cardDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(carddir)/$$f'"; \
	  $(cardDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(carddir)/$$f"; \
	done

uninstall-cardDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(card_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(carddir)/$$f'"; \
	  rm -f "$(DESTDIR)$(carddir)/$$f"; \
	done
install-slotDATA: $(slot_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(slotdir)" || $(MKDIR_P) "$(DESTDIR)$(slotdir)"
	@list='$(slot_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(slotDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(slotdir)/$$f'"; \
	  $(slotDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(slotdir)/$$f"; \
	done

uninstall-slotDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(slot_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(slotdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(slotdir)/$$f"; \
	done
install-themeinstallDATA: $(themeinstall_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(themeinstalldir)" || $(MKDIR_P) "$(DESTDIR)$(themeinstalldir)"
	@list='$(themeinstall_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(themeinstallDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(themeinstalldir)/$$f'"; \
	  $(themeinstallDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(themeinstalldir)/$$f"; \
	done

uninstall-themeinstallDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(themeinstall_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(themeinstalldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(themeinstalldir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(utildir)" "$(DESTDIR)$(carddir)" "$(DESTDIR)$(slotdir)" "$(DESTDIR)$(themeinstalldir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-utilPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-cardDATA install-data-local install-slotDATA \
	install-themeinstallDATA install-utilPROGRAMS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-cardDATA uninstall-slotDATA \
	uninstall-themeinstallDATA uninstall-utilPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-utilPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-cardDATA \
	install-data install-data-am install-data-local install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-slotDATA install-strip install-themeinstallDATA \
	install-utilPROGRAMS installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-cardDATA uninstall-slotDATA \
	uninstall-themeinstallDATA uninstall-utilPROGRAMS


install-data-local:
	if test -z "$(DESTDIR)" ; then \
		for p in $^ ; do \
			GCONF_CONFIG_SOURCE=$(GCONF_SCHEMA_CONFIG_SOURCE) $(GCONFTOOL) --makefile-install-rule $$p 2>&1 > /dev/null; \
		done \
	fi

games-marshal.c: stamp-games-marshal.c
	@true
stamp-games-marshal.c: games-marshal.list Makefile
	$(GLIB_GENMARSHAL) --prefix=games_marshal $< --header --body $(GLIB_GENMARSHAL_INTERNAL) > games-marshal.c \
	&& echo timestamp > $(@F)

games-marshal.h: stamp-games-marshal.h
	@true
stamp-games-marshal.h: games-marshal.list Makefile
	$(GLIB_GENMARSHAL) --prefix=games_marshal $< --header $(GLIB_GENMARSHAL_INTERNAL) > games-marshal.h \
	&& echo timestamp > $(@F)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
