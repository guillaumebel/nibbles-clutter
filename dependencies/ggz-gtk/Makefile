# Makefile.in generated by automake 1.10.2 from Makefile.am.
# dependencies/ggz-gtk/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/gnome-games
pkglibdir = $(libdir)/gnome-games
pkgincludedir = $(includedir)/gnome-games
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = dependencies/ggz-gtk
DIST_COMMON = $(am__include_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/c99.m4 $(top_srcdir)/m4/ggz.m4 \
	$(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/platform.m4 $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/m4/shave.m4 $(top_srcdir)/m4/sound.m4 \
	$(top_srcdir)/m4/system.m4 $(top_srcdir)/m4/tls.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(ggzgtkdatadir)" \
	"$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libggz_gtk_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libggz_gtk_la_OBJECTS = libggz_gtk_la-about.lo \
	libggz_gtk_la-chat.lo libggz_gtk_la-client.lo \
	libggz_gtk_la-first.lo libggz_gtk_la-game.lo \
	libggz_gtk_la-ggzclient.lo libggz_gtk_la-launch.lo \
	libggz_gtk_la-login.lo libggz_gtk_la-motd.lo \
	libggz_gtk_la-msgbox.lo libggz_gtk_la-pick_module.lo \
	libggz_gtk_la-playerinfo.lo libggz_gtk_la-playerlist.lo \
	libggz_gtk_la-props.lo libggz_gtk_la-roominfo.lo \
	libggz_gtk_la-roomlist.lo libggz_gtk_la-server.lo \
	libggz_gtk_la-support.lo libggz_gtk_la-tablelist.lo \
	libggz_gtk_la-types.lo libggz_gtk_la-xtext.lo
libggz_gtk_la_OBJECTS = $(am_libggz_gtk_la_OBJECTS)
libggz_gtk_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libggz_gtk_la_CFLAGS) \
	$(CFLAGS) $(libggz_gtk_la_LDFLAGS) $(LDFLAGS) -o $@
am_libggz_gtk_la_rpath =
#am_libggz_gtk_la_rpath = -rpath $(libdir)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libggz_gtk_la_SOURCES)
DIST_SOURCES = $(libggz_gtk_la_SOURCES)
ggzgtkdataDATA_INSTALL = $(INSTALL_DATA)
DATA = $(ggzgtkdata_DATA)
am__include_HEADERS_DIST = ggz-embed.h ggz-gtk.h
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run aclocal-1.10
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run tar
AM_CFLAGS =  -Wall -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare 
AM_CPPFLAGS = 
AM_CXXFLAGS =  -g -O2 -fsigned-char -Wall -Wno-unused -Wshadow -Woverloaded-virtual 
AM_LDFLAGS = 
AM_MAKEFLAGS = `test -z $V && echo -s`
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run autoconf
AUTOHEADER = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run automake-1.10
AWK = gawk
CANBERRA_GTK_CFLAGS = -D_REENTRANT -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
CANBERRA_GTK_LIBS = -lcanberra-gtk -lcanberra -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CATALOGS = 
CATOBJEXT = .gmo
CC = /bin/sh /home/guillaume/Builds/gnome-games//shave cc gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fsigned-char -fsigned-char -D_REENTRANT
CHECK_CFLAGS =  
CHECK_LIBS = -lcheck  
CLUTTER_CFLAGS = -pthread -I/usr/include/clutter-0.9 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gtk-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/drm  
CLUTTER_GTK_CFLAGS = -pthread -I/usr/include/clutter-0.9/clutter-gtk -I/usr/include/clutter-0.9 -I/usr/include/gtk-2.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/drm -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0  
CLUTTER_GTK_LIBS = -pthread -lclutter-gtk-0.9 -lclutter-glx-0.9 -lgtk-x11-2.0 -lgthread-2.0 -lrt -lXi -lGL -lX11 -lXdamage -lXcomposite -lXfixes -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CLUTTER_LIBS = -pthread -lclutter-glx-0.9 -lpangocairo-1.0 -lgthread-2.0 -lrt -lXi -lGL -lX11 -lXdamage -lXcomposite -lgdk_pixbuf-2.0 -lpango-1.0 -lcairo -lXfixes -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CPP = gcc -E
CPPFLAGS =  -I /usr/include -I /usr/local/include
CXX = /bin/sh /home/guillaume/Builds/gnome-games//shave cxx g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -fsigned-char -fsigned-char
CYGPATH_W = echo
DATADIRNAME = share
DBUS_GLIB_CFLAGS = 
DBUS_GLIB_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_DEPRECATED = -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DPANGO_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGCONF_DISABLE_DEPRECATED -DBONOBO_DISABLE_DEPRECATED -DBONOBO_UI_DISABLE_DEPRECATED -DGNOME_VFS_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED -DLIBGLADE_DISABLE_DEPRECATED -DWNCK_DISABLE_DEPRECATED -DLIBSOUP_DISABLE_DEPRECATED
DISTCHECK_CONFIGURE_FLAGS = --disable-scrollkeeper 
DLLTOOL = dlltool
DOC_USER_FORMATS = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = /bin/sh /home/guillaume/Builds/gnome-games//shave f77 
FC = /bin/sh /home/guillaume/Builds/gnome-games//shave fc 
FGREP = /bin/grep -F
GCONFTOOL = /usr/bin/gconftool-2
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_PACKAGE = gnome-games
GGZDMOD_INCLUDES = 
GGZDMOD_LDFLAGS = 
GGZMOD_INCLUDES = -I /usr/include
GGZMOD_LDFLAGS = -L/usr/lib
GGZTLS_INCLUDES = 
GGZTLS_LDFLAGS = 
GGZ_CONFIG = /usr/bin/ggz-config
GGZ_GTK_INCLUDES = -I$(top_srcdir)/dependencies/ggz-gtk
GGZ_GTK_LDFLAGS = 
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GLIB_GENMARSHAL_INTERNAL = --internal
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GNOME_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_GAMES_GGZ_DSC_RULE = %.dsc:   %.dsc.in   ; $(SED) -e "s|@VERSION@|$(VERSION)|g" -e "s|@libexecdir@|$(libexecdir)|g" -e "s|@bindir@|$(bindir)|g" -e "s|@ggzexecmoddir@|$(ggzexecmoddir)|g"< $< > $@
GNOME_GAMES_GGZ_INTLTOOL_ROOM_RULE = %.room:   %.room.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
GNOME_LIBS = -lgconf-2 -lglib-2.0  
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GUILE = 
GUILE_CFLAGS = 
GUILE_CONFIG = 
GUILE_LIBS = 
HELP_DIR = ${datadir}/gnome/help
HILDON_CFLAGS = 
HILDON_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LD = /usr/bin/ld
LDADD =  -lnsl -lpthread
LDFLAGS =  -L/usr/lib -L/usr/local/lib
LIBGGZ_INCLUDES = -I /usr/include
LIBGGZ_LDFLAGS = -L/usr/lib
LIBOBJS = 
LIBS = 
LIBTOOL = /bin/sh /home/guillaume/Builds/gnome-games//shave-libtool '$(SHELL) $(top_builddir)/libtool'
LIB_ASYNC = 
LIB_GCRYPT = -lgcrypt
LIB_GGZ = -lggz
LIB_GGZDMOD = 
LIB_GGZMOD = -lggzmod
LIB_GGZTLS = 
LIB_GGZ_GTK = $(top_builddir)/dependencies/ggz-gtk/libggz-gtk.la
LIPO = 
LN_S = ln -s
LSB_RELEASE = /usr/bin/lsb_release
LTLIBOBJS = 
MAINT = 
MAKEFLAGS = -s
MAKEINFO = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = /bin/sh /home/guillaume/Builds/gnome-games//shave objc 
OBJDUMP = objdump
OBJEXT = o
OMF_DIR = ${datadir}/omf
OTOOL = 
OTOOL64 = 
PACKAGE = gnome-games
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-games
PACKAGE_NAME = GNOME Games
PACKAGE_STRING = GNOME Games 2.27.2
PACKAGE_TARNAME = gnome-games
PACKAGE_VERSION = 2.27.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGTK_CFLAGS = -I/usr/include/pygtk-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
PYGTK_LIBS = -lgobject-2.0 -lglib-2.0  
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
Q = $(V:1=)
RANLIB = ranlib
RSVG_CFLAGS = -I/usr/include/librsvg-2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
RSVG_LIBS = -lrsvg-2 -lgdk_pixbuf-2.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lcairo  
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_LIBS = 
SDL_MIXER_CFLAGS = 
SDL_MIXER_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SMCLIENT_CFLAGS = 
SMCLIENT_LIBS = 
STRIP = strip
USE_NLS = yes
V = @
VERSION = 2.27.2
WARN_CFLAGS = -Wall -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare 
WARN_CXXFLAGS = -g -O2 -fsigned-char -Wall -Wno-unused -Wshadow -Woverloaded-virtual 
XGETTEXT = /usr/bin/xgettext
XML_CFLAGS = 
XML_LIBS = 
abs_builddir = /home/guillaume/Builds/gnome-games/dependencies/ggz-gtk
abs_srcdir = /home/guillaume/Builds/gnome-games/dependencies/ggz-gtk
abs_top_builddir = /home/guillaume/Builds/gnome-games
abs_top_srcdir = /home/guillaume/Builds/gnome-games
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
allgames = aisleriot blackjack gnometris gnect gnomine same-gnome mahjongg gtali gnotravex gnotski glines iagno glchess gnobots2 gnibbles gnome-sudoku
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gamelist = gnibbles gnometris
ggz_config = /usr/bin
ggzdatadir = /usr/share/ggz
ggzdconfdir = 
ggzddatadir = 
ggzdexecmoddir = 
ggzdexecmodpath = 
ggzdmod_includes = 
ggzdmod_libraries = 
ggzexecmoddir = /usr/lib/ggz
ggzmod_includes = /usr/include
ggzmod_libraries = /usr/lib
ggzmoduleconfdir = /usr/etc
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guillaume/Builds/gnome-games/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libggz_includes = /usr/include
libggz_libraries = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
packagesrcdir = /home/guillaume/Builds/gnome-games
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gnome-games
pkgpythondir = ${pythondir}/gnome-games
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
scoredir = ${localstatedir}/games
scores_group = games
scores_user = games
setgid = true
sharedstatedir = ${prefix}/com
shavedir = /home/guillaume/Builds/gnome-games/
srcdir = .
staginggames = lightsoff
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
ggzgtkdatadir = $(datadir)/ggz/$(PACKAGE)
libggz_gtk_la_CFLAGS = $(GTK_CFLAGS) \
	$(GGZCORE_INCLUDES) \
	$(LIBGGZ_INCLUDES) \
	-DGGZGTKDATADIR=\"$(ggzgtkdatadir)\" \
	$(AM_CFLAGS)

ggzgtkdata_DATA = about_bg.png		\
			ggz_gtk_admin.svg 	\
			ggz_gtk_guest.svg 	\
			ggz_gtk_registered.svg	\
			ggz_gtk_bot.svg		\
			ggz_gtk_lag0.svg 	\
			ggz_gtk_lag1.svg 	\
			ggz_gtk_lag2.svg	\
			ggz_gtk_lag3.svg	\
			ggz_gtk_lag4.svg	\
			ggz_gtk_lag5.svg

#lib_LTLIBRARIES = libggz-gtk.la
#include_HEADERS = ggz-embed.h ggz-gtk.h
noinst_LTLIBRARIES = libggz-gtk.la
libggz_gtk_la_SOURCES = about.c \
			about.h \
			chat.c \
			chat.h \
			client.c \
			client.h \
			first.c \
			first.h \
			game.c \
			game.h \
			ggzclient.c \
			ggzclient.h \
			ggz-embed.h		\
			ggz-gtk.h		\
			launch.c \
			launch.h \
			login.c \
			login.h \
			motd.c \
			motd.h \
			msgbox.c \
			msgbox.h \
			pick_module.c \
			pick_module.h \
			playerinfo.c \
			playerinfo.h \
			playerlist.c \
			playerlist.h \
			props.c \
			props.h \
			roominfo.c \
			roominfo.h \
			roomlist.c		\
			roomlist.h		\
			server.c \
			server.h \
			support.c \
			support.h \
			tablelist.c \
			tablelist.h \
			types.c \
			types.h \
			xtext.c \
			xtext.h \
			xtext-ggz.h

libggz_gtk_la_LIBADD = $(GTK_LIBS) $(LDADD) $(LIBS) $(INTLLIBS) \
			$(LIB_GGZCORE) $(LIB_GGZ)

libggz_gtk_la_LDFLAGS = $(GGZCORE_LDFLAGS) $(LIBGGZ_LDFLAGS)

#if WIN32
#ggz_gtk_SOURCES += ggz-gtk-icon.rc
#ggz_gtk_LDADD += ggz-gtk-icon.o
#ggz_gtk_DEPENDENCIES += ggz-gtk-icon.o
#ggz-gtk-icon.o: ggz-gtk-icon.rc
#	i586-mingw32msvc-windres -i $< $@
#endif
EXTRA_DIST = $(ggzgtkdata_DATA) $(pics)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  dependencies/ggz-gtk/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  dependencies/ggz-gtk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libggz-gtk.la: $(libggz_gtk_la_OBJECTS) $(libggz_gtk_la_DEPENDENCIES) 
	$(libggz_gtk_la_LINK) $(am_libggz_gtk_la_rpath) $(libggz_gtk_la_OBJECTS) $(libggz_gtk_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libggz_gtk_la-about.Plo
include ./$(DEPDIR)/libggz_gtk_la-chat.Plo
include ./$(DEPDIR)/libggz_gtk_la-client.Plo
include ./$(DEPDIR)/libggz_gtk_la-first.Plo
include ./$(DEPDIR)/libggz_gtk_la-game.Plo
include ./$(DEPDIR)/libggz_gtk_la-ggzclient.Plo
include ./$(DEPDIR)/libggz_gtk_la-launch.Plo
include ./$(DEPDIR)/libggz_gtk_la-login.Plo
include ./$(DEPDIR)/libggz_gtk_la-motd.Plo
include ./$(DEPDIR)/libggz_gtk_la-msgbox.Plo
include ./$(DEPDIR)/libggz_gtk_la-pick_module.Plo
include ./$(DEPDIR)/libggz_gtk_la-playerinfo.Plo
include ./$(DEPDIR)/libggz_gtk_la-playerlist.Plo
include ./$(DEPDIR)/libggz_gtk_la-props.Plo
include ./$(DEPDIR)/libggz_gtk_la-roominfo.Plo
include ./$(DEPDIR)/libggz_gtk_la-roomlist.Plo
include ./$(DEPDIR)/libggz_gtk_la-server.Plo
include ./$(DEPDIR)/libggz_gtk_la-support.Plo
include ./$(DEPDIR)/libggz_gtk_la-tablelist.Plo
include ./$(DEPDIR)/libggz_gtk_la-types.Plo
include ./$(DEPDIR)/libggz_gtk_la-xtext.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libggz_gtk_la-about.lo: about.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-about.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-about.Tpo -c -o libggz_gtk_la-about.lo `test -f 'about.c' || echo '$(srcdir)/'`about.c
	mv -f $(DEPDIR)/libggz_gtk_la-about.Tpo $(DEPDIR)/libggz_gtk_la-about.Plo
#	source='about.c' object='libggz_gtk_la-about.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-about.lo `test -f 'about.c' || echo '$(srcdir)/'`about.c

libggz_gtk_la-chat.lo: chat.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-chat.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-chat.Tpo -c -o libggz_gtk_la-chat.lo `test -f 'chat.c' || echo '$(srcdir)/'`chat.c
	mv -f $(DEPDIR)/libggz_gtk_la-chat.Tpo $(DEPDIR)/libggz_gtk_la-chat.Plo
#	source='chat.c' object='libggz_gtk_la-chat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-chat.lo `test -f 'chat.c' || echo '$(srcdir)/'`chat.c

libggz_gtk_la-client.lo: client.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-client.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-client.Tpo -c -o libggz_gtk_la-client.lo `test -f 'client.c' || echo '$(srcdir)/'`client.c
	mv -f $(DEPDIR)/libggz_gtk_la-client.Tpo $(DEPDIR)/libggz_gtk_la-client.Plo
#	source='client.c' object='libggz_gtk_la-client.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-client.lo `test -f 'client.c' || echo '$(srcdir)/'`client.c

libggz_gtk_la-first.lo: first.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-first.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-first.Tpo -c -o libggz_gtk_la-first.lo `test -f 'first.c' || echo '$(srcdir)/'`first.c
	mv -f $(DEPDIR)/libggz_gtk_la-first.Tpo $(DEPDIR)/libggz_gtk_la-first.Plo
#	source='first.c' object='libggz_gtk_la-first.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-first.lo `test -f 'first.c' || echo '$(srcdir)/'`first.c

libggz_gtk_la-game.lo: game.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-game.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-game.Tpo -c -o libggz_gtk_la-game.lo `test -f 'game.c' || echo '$(srcdir)/'`game.c
	mv -f $(DEPDIR)/libggz_gtk_la-game.Tpo $(DEPDIR)/libggz_gtk_la-game.Plo
#	source='game.c' object='libggz_gtk_la-game.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-game.lo `test -f 'game.c' || echo '$(srcdir)/'`game.c

libggz_gtk_la-ggzclient.lo: ggzclient.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-ggzclient.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-ggzclient.Tpo -c -o libggz_gtk_la-ggzclient.lo `test -f 'ggzclient.c' || echo '$(srcdir)/'`ggzclient.c
	mv -f $(DEPDIR)/libggz_gtk_la-ggzclient.Tpo $(DEPDIR)/libggz_gtk_la-ggzclient.Plo
#	source='ggzclient.c' object='libggz_gtk_la-ggzclient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-ggzclient.lo `test -f 'ggzclient.c' || echo '$(srcdir)/'`ggzclient.c

libggz_gtk_la-launch.lo: launch.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-launch.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-launch.Tpo -c -o libggz_gtk_la-launch.lo `test -f 'launch.c' || echo '$(srcdir)/'`launch.c
	mv -f $(DEPDIR)/libggz_gtk_la-launch.Tpo $(DEPDIR)/libggz_gtk_la-launch.Plo
#	source='launch.c' object='libggz_gtk_la-launch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-launch.lo `test -f 'launch.c' || echo '$(srcdir)/'`launch.c

libggz_gtk_la-login.lo: login.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-login.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-login.Tpo -c -o libggz_gtk_la-login.lo `test -f 'login.c' || echo '$(srcdir)/'`login.c
	mv -f $(DEPDIR)/libggz_gtk_la-login.Tpo $(DEPDIR)/libggz_gtk_la-login.Plo
#	source='login.c' object='libggz_gtk_la-login.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-login.lo `test -f 'login.c' || echo '$(srcdir)/'`login.c

libggz_gtk_la-motd.lo: motd.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-motd.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-motd.Tpo -c -o libggz_gtk_la-motd.lo `test -f 'motd.c' || echo '$(srcdir)/'`motd.c
	mv -f $(DEPDIR)/libggz_gtk_la-motd.Tpo $(DEPDIR)/libggz_gtk_la-motd.Plo
#	source='motd.c' object='libggz_gtk_la-motd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-motd.lo `test -f 'motd.c' || echo '$(srcdir)/'`motd.c

libggz_gtk_la-msgbox.lo: msgbox.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-msgbox.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-msgbox.Tpo -c -o libggz_gtk_la-msgbox.lo `test -f 'msgbox.c' || echo '$(srcdir)/'`msgbox.c
	mv -f $(DEPDIR)/libggz_gtk_la-msgbox.Tpo $(DEPDIR)/libggz_gtk_la-msgbox.Plo
#	source='msgbox.c' object='libggz_gtk_la-msgbox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-msgbox.lo `test -f 'msgbox.c' || echo '$(srcdir)/'`msgbox.c

libggz_gtk_la-pick_module.lo: pick_module.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-pick_module.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-pick_module.Tpo -c -o libggz_gtk_la-pick_module.lo `test -f 'pick_module.c' || echo '$(srcdir)/'`pick_module.c
	mv -f $(DEPDIR)/libggz_gtk_la-pick_module.Tpo $(DEPDIR)/libggz_gtk_la-pick_module.Plo
#	source='pick_module.c' object='libggz_gtk_la-pick_module.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-pick_module.lo `test -f 'pick_module.c' || echo '$(srcdir)/'`pick_module.c

libggz_gtk_la-playerinfo.lo: playerinfo.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-playerinfo.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-playerinfo.Tpo -c -o libggz_gtk_la-playerinfo.lo `test -f 'playerinfo.c' || echo '$(srcdir)/'`playerinfo.c
	mv -f $(DEPDIR)/libggz_gtk_la-playerinfo.Tpo $(DEPDIR)/libggz_gtk_la-playerinfo.Plo
#	source='playerinfo.c' object='libggz_gtk_la-playerinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-playerinfo.lo `test -f 'playerinfo.c' || echo '$(srcdir)/'`playerinfo.c

libggz_gtk_la-playerlist.lo: playerlist.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-playerlist.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-playerlist.Tpo -c -o libggz_gtk_la-playerlist.lo `test -f 'playerlist.c' || echo '$(srcdir)/'`playerlist.c
	mv -f $(DEPDIR)/libggz_gtk_la-playerlist.Tpo $(DEPDIR)/libggz_gtk_la-playerlist.Plo
#	source='playerlist.c' object='libggz_gtk_la-playerlist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-playerlist.lo `test -f 'playerlist.c' || echo '$(srcdir)/'`playerlist.c

libggz_gtk_la-props.lo: props.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-props.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-props.Tpo -c -o libggz_gtk_la-props.lo `test -f 'props.c' || echo '$(srcdir)/'`props.c
	mv -f $(DEPDIR)/libggz_gtk_la-props.Tpo $(DEPDIR)/libggz_gtk_la-props.Plo
#	source='props.c' object='libggz_gtk_la-props.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-props.lo `test -f 'props.c' || echo '$(srcdir)/'`props.c

libggz_gtk_la-roominfo.lo: roominfo.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-roominfo.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-roominfo.Tpo -c -o libggz_gtk_la-roominfo.lo `test -f 'roominfo.c' || echo '$(srcdir)/'`roominfo.c
	mv -f $(DEPDIR)/libggz_gtk_la-roominfo.Tpo $(DEPDIR)/libggz_gtk_la-roominfo.Plo
#	source='roominfo.c' object='libggz_gtk_la-roominfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-roominfo.lo `test -f 'roominfo.c' || echo '$(srcdir)/'`roominfo.c

libggz_gtk_la-roomlist.lo: roomlist.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-roomlist.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-roomlist.Tpo -c -o libggz_gtk_la-roomlist.lo `test -f 'roomlist.c' || echo '$(srcdir)/'`roomlist.c
	mv -f $(DEPDIR)/libggz_gtk_la-roomlist.Tpo $(DEPDIR)/libggz_gtk_la-roomlist.Plo
#	source='roomlist.c' object='libggz_gtk_la-roomlist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-roomlist.lo `test -f 'roomlist.c' || echo '$(srcdir)/'`roomlist.c

libggz_gtk_la-server.lo: server.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-server.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-server.Tpo -c -o libggz_gtk_la-server.lo `test -f 'server.c' || echo '$(srcdir)/'`server.c
	mv -f $(DEPDIR)/libggz_gtk_la-server.Tpo $(DEPDIR)/libggz_gtk_la-server.Plo
#	source='server.c' object='libggz_gtk_la-server.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-server.lo `test -f 'server.c' || echo '$(srcdir)/'`server.c

libggz_gtk_la-support.lo: support.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-support.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-support.Tpo -c -o libggz_gtk_la-support.lo `test -f 'support.c' || echo '$(srcdir)/'`support.c
	mv -f $(DEPDIR)/libggz_gtk_la-support.Tpo $(DEPDIR)/libggz_gtk_la-support.Plo
#	source='support.c' object='libggz_gtk_la-support.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-support.lo `test -f 'support.c' || echo '$(srcdir)/'`support.c

libggz_gtk_la-tablelist.lo: tablelist.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-tablelist.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-tablelist.Tpo -c -o libggz_gtk_la-tablelist.lo `test -f 'tablelist.c' || echo '$(srcdir)/'`tablelist.c
	mv -f $(DEPDIR)/libggz_gtk_la-tablelist.Tpo $(DEPDIR)/libggz_gtk_la-tablelist.Plo
#	source='tablelist.c' object='libggz_gtk_la-tablelist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-tablelist.lo `test -f 'tablelist.c' || echo '$(srcdir)/'`tablelist.c

libggz_gtk_la-types.lo: types.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-types.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-types.Tpo -c -o libggz_gtk_la-types.lo `test -f 'types.c' || echo '$(srcdir)/'`types.c
	mv -f $(DEPDIR)/libggz_gtk_la-types.Tpo $(DEPDIR)/libggz_gtk_la-types.Plo
#	source='types.c' object='libggz_gtk_la-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-types.lo `test -f 'types.c' || echo '$(srcdir)/'`types.c

libggz_gtk_la-xtext.lo: xtext.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -MT libggz_gtk_la-xtext.lo -MD -MP -MF $(DEPDIR)/libggz_gtk_la-xtext.Tpo -c -o libggz_gtk_la-xtext.lo `test -f 'xtext.c' || echo '$(srcdir)/'`xtext.c
	mv -f $(DEPDIR)/libggz_gtk_la-xtext.Tpo $(DEPDIR)/libggz_gtk_la-xtext.Plo
#	source='xtext.c' object='libggz_gtk_la-xtext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libggz_gtk_la_CFLAGS) $(CFLAGS) -c -o libggz_gtk_la-xtext.lo `test -f 'xtext.c' || echo '$(srcdir)/'`xtext.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-ggzgtkdataDATA: $(ggzgtkdata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ggzgtkdatadir)" || $(MKDIR_P) "$(DESTDIR)$(ggzgtkdatadir)"
	@list='$(ggzgtkdata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(ggzgtkdataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(ggzgtkdatadir)/$$f'"; \
	  $(ggzgtkdataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(ggzgtkdatadir)/$$f"; \
	done

uninstall-ggzgtkdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ggzgtkdata_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(ggzgtkdatadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ggzgtkdatadir)/$$f"; \
	done
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(ggzgtkdatadir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-ggzgtkdataDATA install-includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-ggzgtkdataDATA uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-ggzgtkdataDATA install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-ggzgtkdataDATA \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
