# Makefile.in generated by automake 1.10.2 from Makefile.am.
# dependencies/gnuchess/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/gnome-games
pkglibdir = $(libdir)/gnome-games
pkgincludedir = $(includedir)/gnome-games
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = gnome-gnuchess$(EXEEXT)
subdir = dependencies/gnuchess
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/c99.m4 $(top_srcdir)/m4/ggz.m4 \
	$(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/platform.m4 $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/m4/shave.m4 $(top_srcdir)/m4/sound.m4 \
	$(top_srcdir)/m4/system.m4 $(top_srcdir)/m4/tls.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_gnome_gnuchess_OBJECTS = gnome_gnuchess-atak.$(OBJEXT) \
	gnome_gnuchess-book.$(OBJEXT) gnome_gnuchess-cmd.$(OBJEXT) \
	gnome_gnuchess-debug.$(OBJEXT) gnome_gnuchess-epd.$(OBJEXT) \
	gnome_gnuchess-eval.$(OBJEXT) gnome_gnuchess-genmove.$(OBJEXT) \
	gnome_gnuchess-getopt.$(OBJEXT) \
	gnome_gnuchess-getopt1.$(OBJEXT) gnome_gnuchess-hash.$(OBJEXT) \
	gnome_gnuchess-hung.$(OBJEXT) gnome_gnuchess-init.$(OBJEXT) \
	gnome_gnuchess-input.$(OBJEXT) \
	gnome_gnuchess-iterate.$(OBJEXT) gnome_gnuchess-main.$(OBJEXT) \
	gnome_gnuchess-move.$(OBJEXT) gnome_gnuchess-null.$(OBJEXT) \
	gnome_gnuchess-output.$(OBJEXT) \
	gnome_gnuchess-players.$(OBJEXT) gnome_gnuchess-pgn.$(OBJEXT) \
	gnome_gnuchess-ponder.$(OBJEXT) \
	gnome_gnuchess-quiesce.$(OBJEXT) \
	gnome_gnuchess-random.$(OBJEXT) \
	gnome_gnuchess-repeat.$(OBJEXT) \
	gnome_gnuchess-search.$(OBJEXT) gnome_gnuchess-solve.$(OBJEXT) \
	gnome_gnuchess-sort.$(OBJEXT) gnome_gnuchess-swap.$(OBJEXT) \
	gnome_gnuchess-test.$(OBJEXT) gnome_gnuchess-ttable.$(OBJEXT) \
	gnome_gnuchess-util.$(OBJEXT) gnome_gnuchess-lexpgn.$(OBJEXT)
gnome_gnuchess_OBJECTS = $(am_gnome_gnuchess_OBJECTS)
gnome_gnuchess_LDADD = $(LDADD)
gnome_gnuchess_DEPENDENCIES =
gnome_gnuchess_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(gnome_gnuchess_CFLAGS) \
	$(CFLAGS) $(gnome_gnuchess_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(gnome_gnuchess_SOURCES)
DIST_SOURCES = $(gnome_gnuchess_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run aclocal-1.10
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run tar
AM_CFLAGS =  -Wall -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare 
AM_CPPFLAGS = 
AM_CXXFLAGS =  -g -O2 -fsigned-char -Wall -Wno-unused -Wshadow -Woverloaded-virtual 
AM_LDFLAGS = 
AM_MAKEFLAGS = `test -z $V && echo -s`
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run autoconf
AUTOHEADER = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run automake-1.10
AWK = gawk
CANBERRA_GTK_CFLAGS = -D_REENTRANT -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
CANBERRA_GTK_LIBS = -lcanberra-gtk -lcanberra -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CATALOGS = 
CATOBJEXT = .gmo
CC = /bin/sh /home/guillaume/Builds/gnome-games//shave cc gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fsigned-char -fsigned-char -D_REENTRANT
CHECK_CFLAGS =  
CHECK_LIBS = -lcheck  
CLUTTER_CFLAGS = -pthread -I/usr/include/clutter-0.9 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gtk-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/drm  
CLUTTER_GTK_CFLAGS = -pthread -I/usr/include/clutter-0.9/clutter-gtk -I/usr/include/clutter-0.9 -I/usr/include/gtk-2.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/drm -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0  
CLUTTER_GTK_LIBS = -pthread -lclutter-gtk-0.9 -lclutter-glx-0.9 -lgtk-x11-2.0 -lgthread-2.0 -lrt -lXi -lGL -lX11 -lXdamage -lXcomposite -lXfixes -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CLUTTER_LIBS = -pthread -lclutter-glx-0.9 -lpangocairo-1.0 -lgthread-2.0 -lrt -lXi -lGL -lX11 -lXdamage -lXcomposite -lgdk_pixbuf-2.0 -lpango-1.0 -lcairo -lXfixes -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
CPP = gcc -E
CPPFLAGS =  -I /usr/include -I /usr/local/include
CXX = /bin/sh /home/guillaume/Builds/gnome-games//shave cxx g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -fsigned-char -fsigned-char
CYGPATH_W = echo
DATADIRNAME = share
DBUS_GLIB_CFLAGS = 
DBUS_GLIB_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_DEPRECATED = -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DPANGO_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGCONF_DISABLE_DEPRECATED -DBONOBO_DISABLE_DEPRECATED -DBONOBO_UI_DISABLE_DEPRECATED -DGNOME_VFS_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED -DLIBGLADE_DISABLE_DEPRECATED -DWNCK_DISABLE_DEPRECATED -DLIBSOUP_DISABLE_DEPRECATED
DISTCHECK_CONFIGURE_FLAGS = --disable-scrollkeeper 
DLLTOOL = dlltool
DOC_USER_FORMATS = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = /bin/sh /home/guillaume/Builds/gnome-games//shave f77 
FC = /bin/sh /home/guillaume/Builds/gnome-games//shave fc 
FGREP = /bin/grep -F
GCONFTOOL = /usr/bin/gconftool-2
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_PACKAGE = gnome-games
GGZDMOD_INCLUDES = 
GGZDMOD_LDFLAGS = 
GGZMOD_INCLUDES = -I /usr/include
GGZMOD_LDFLAGS = -L/usr/lib
GGZTLS_INCLUDES = 
GGZTLS_LDFLAGS = 
GGZ_CONFIG = /usr/bin/ggz-config
GGZ_GTK_INCLUDES = -I$(top_srcdir)/dependencies/ggz-gtk
GGZ_GTK_LDFLAGS = 
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GLIB_GENMARSHAL_INTERNAL = --internal
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GNOME_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GNOME_GAMES_GGZ_DSC_RULE = %.dsc:   %.dsc.in   ; $(SED) -e "s|@VERSION@|$(VERSION)|g" -e "s|@libexecdir@|$(libexecdir)|g" -e "s|@bindir@|$(bindir)|g" -e "s|@ggzexecmoddir@|$(ggzexecmoddir)|g"< $< > $@
GNOME_GAMES_GGZ_INTLTOOL_ROOM_RULE = %.room:   %.room.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
GNOME_LIBS = -lgconf-2 -lglib-2.0  
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GUILE = 
GUILE_CFLAGS = 
GUILE_CONFIG = 
GUILE_LIBS = 
HELP_DIR = ${datadir}/gnome/help
HILDON_CFLAGS = 
HILDON_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LD = /usr/bin/ld
LDADD =  -lnsl -lpthread
LDFLAGS =  -L/usr/lib -L/usr/local/lib
LIBGGZ_INCLUDES = -I /usr/include
LIBGGZ_LDFLAGS = -L/usr/lib
LIBOBJS = 
LIBS = 
LIBTOOL = /bin/sh /home/guillaume/Builds/gnome-games//shave-libtool '$(SHELL) $(top_builddir)/libtool'
LIB_ASYNC = 
LIB_GCRYPT = -lgcrypt
LIB_GGZ = -lggz
LIB_GGZDMOD = 
LIB_GGZMOD = -lggzmod
LIB_GGZTLS = 
LIB_GGZ_GTK = $(top_builddir)/dependencies/ggz-gtk/libggz-gtk.la
LIPO = 
LN_S = ln -s
LSB_RELEASE = /usr/bin/lsb_release
LTLIBOBJS = 
MAINT = 
MAKEFLAGS = -s
MAKEINFO = ${SHELL} /home/guillaume/Builds/gnome-games/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = /bin/sh /home/guillaume/Builds/gnome-games//shave objc 
OBJDUMP = objdump
OBJEXT = o
OMF_DIR = ${datadir}/omf
OTOOL = 
OTOOL64 = 
PACKAGE = gnome-games
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-games
PACKAGE_NAME = GNOME Games
PACKAGE_STRING = GNOME Games 2.27.2
PACKAGE_TARNAME = gnome-games
PACKAGE_VERSION = 2.27.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PYGTK_CFLAGS = -I/usr/include/pygtk-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
PYGTK_LIBS = -lgobject-2.0 -lglib-2.0  
PYTHON = /usr/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
Q = $(V:1=)
RANLIB = ranlib
RSVG_CFLAGS = -I/usr/include/librsvg-2 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gtk-2.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
RSVG_LIBS = -lrsvg-2 -lgdk_pixbuf-2.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lcairo  
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_LIBS = 
SDL_MIXER_CFLAGS = 
SDL_MIXER_LIBS = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SMCLIENT_CFLAGS = 
SMCLIENT_LIBS = 
STRIP = strip
USE_NLS = yes
V = @
VERSION = 2.27.2
WARN_CFLAGS = -Wall -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wno-sign-compare 
WARN_CXXFLAGS = -g -O2 -fsigned-char -Wall -Wno-unused -Wshadow -Woverloaded-virtual 
XGETTEXT = /usr/bin/xgettext
XML_CFLAGS = 
XML_LIBS = 
abs_builddir = /home/guillaume/Builds/gnome-games/dependencies/gnuchess
abs_srcdir = /home/guillaume/Builds/gnome-games/dependencies/gnuchess
abs_top_builddir = /home/guillaume/Builds/gnome-games
abs_top_srcdir = /home/guillaume/Builds/gnome-games
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
allgames = aisleriot blackjack gnometris gnect gnomine same-gnome mahjongg gtali gnotravex gnotski glines iagno glchess gnobots2 gnibbles gnome-sudoku
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gamelist = gnibbles gnometris
ggz_config = /usr/bin
ggzdatadir = /usr/share/ggz
ggzdconfdir = 
ggzddatadir = 
ggzdexecmoddir = 
ggzdexecmodpath = 
ggzdmod_includes = 
ggzdmod_libraries = 
ggzexecmoddir = /usr/lib/ggz
ggzmod_includes = /usr/include
ggzmod_libraries = /usr/lib
ggzmoduleconfdir = /usr/etc
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guillaume/Builds/gnome-games/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libggz_includes = /usr/include
libggz_libraries = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
packagesrcdir = /home/guillaume/Builds/gnome-games
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gnome-games
pkgpythondir = ${pythondir}/gnome-games
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
scoredir = ${localstatedir}/games
scores_group = games
scores_user = games
setgid = true
sharedstatedir = ${prefix}/com
shavedir = /home/guillaume/Builds/gnome-games/
srcdir = .
staginggames = lightsoff
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
gnome_gnuchess_SOURCES = atak.c book.c cmd.c debug.c epd.c eval.c genmove.c \
 getopt.c getopt1.c hash.c\
 hung.c	init.c input.c iterate.c main.c move.c null.c output.c players.c\
 pgn.c ponder.c quiesce.c random.c repeat.c search.c solve.c sort.c\
 swap.c test.c ttable.c util.c common.h book.h eval.h getopt.h \
 inlines.h version.h lexpgn.c lexpgn.h

gnome_gnuchess_CFLAGS = $(PTHREAD_CFLAGS) $(AM_CFLAGS)
gnome_gnuchess_LDFLAGS = $(PTHREAD_LDFLAGS) $(PTHREAD_LIBS) $(AM_LDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  dependencies/gnuchess/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  dependencies/gnuchess/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
gnome-gnuchess$(EXEEXT): $(gnome_gnuchess_OBJECTS) $(gnome_gnuchess_DEPENDENCIES) 
	@rm -f gnome-gnuchess$(EXEEXT)
	$(gnome_gnuchess_LINK) $(gnome_gnuchess_OBJECTS) $(gnome_gnuchess_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gnome_gnuchess-atak.Po
include ./$(DEPDIR)/gnome_gnuchess-book.Po
include ./$(DEPDIR)/gnome_gnuchess-cmd.Po
include ./$(DEPDIR)/gnome_gnuchess-debug.Po
include ./$(DEPDIR)/gnome_gnuchess-epd.Po
include ./$(DEPDIR)/gnome_gnuchess-eval.Po
include ./$(DEPDIR)/gnome_gnuchess-genmove.Po
include ./$(DEPDIR)/gnome_gnuchess-getopt.Po
include ./$(DEPDIR)/gnome_gnuchess-getopt1.Po
include ./$(DEPDIR)/gnome_gnuchess-hash.Po
include ./$(DEPDIR)/gnome_gnuchess-hung.Po
include ./$(DEPDIR)/gnome_gnuchess-init.Po
include ./$(DEPDIR)/gnome_gnuchess-input.Po
include ./$(DEPDIR)/gnome_gnuchess-iterate.Po
include ./$(DEPDIR)/gnome_gnuchess-lexpgn.Po
include ./$(DEPDIR)/gnome_gnuchess-main.Po
include ./$(DEPDIR)/gnome_gnuchess-move.Po
include ./$(DEPDIR)/gnome_gnuchess-null.Po
include ./$(DEPDIR)/gnome_gnuchess-output.Po
include ./$(DEPDIR)/gnome_gnuchess-pgn.Po
include ./$(DEPDIR)/gnome_gnuchess-players.Po
include ./$(DEPDIR)/gnome_gnuchess-ponder.Po
include ./$(DEPDIR)/gnome_gnuchess-quiesce.Po
include ./$(DEPDIR)/gnome_gnuchess-random.Po
include ./$(DEPDIR)/gnome_gnuchess-repeat.Po
include ./$(DEPDIR)/gnome_gnuchess-search.Po
include ./$(DEPDIR)/gnome_gnuchess-solve.Po
include ./$(DEPDIR)/gnome_gnuchess-sort.Po
include ./$(DEPDIR)/gnome_gnuchess-swap.Po
include ./$(DEPDIR)/gnome_gnuchess-test.Po
include ./$(DEPDIR)/gnome_gnuchess-ttable.Po
include ./$(DEPDIR)/gnome_gnuchess-util.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

gnome_gnuchess-atak.o: atak.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-atak.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-atak.Tpo -c -o gnome_gnuchess-atak.o `test -f 'atak.c' || echo '$(srcdir)/'`atak.c
	mv -f $(DEPDIR)/gnome_gnuchess-atak.Tpo $(DEPDIR)/gnome_gnuchess-atak.Po
#	source='atak.c' object='gnome_gnuchess-atak.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-atak.o `test -f 'atak.c' || echo '$(srcdir)/'`atak.c

gnome_gnuchess-atak.obj: atak.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-atak.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-atak.Tpo -c -o gnome_gnuchess-atak.obj `if test -f 'atak.c'; then $(CYGPATH_W) 'atak.c'; else $(CYGPATH_W) '$(srcdir)/atak.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-atak.Tpo $(DEPDIR)/gnome_gnuchess-atak.Po
#	source='atak.c' object='gnome_gnuchess-atak.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-atak.obj `if test -f 'atak.c'; then $(CYGPATH_W) 'atak.c'; else $(CYGPATH_W) '$(srcdir)/atak.c'; fi`

gnome_gnuchess-book.o: book.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-book.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-book.Tpo -c -o gnome_gnuchess-book.o `test -f 'book.c' || echo '$(srcdir)/'`book.c
	mv -f $(DEPDIR)/gnome_gnuchess-book.Tpo $(DEPDIR)/gnome_gnuchess-book.Po
#	source='book.c' object='gnome_gnuchess-book.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-book.o `test -f 'book.c' || echo '$(srcdir)/'`book.c

gnome_gnuchess-book.obj: book.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-book.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-book.Tpo -c -o gnome_gnuchess-book.obj `if test -f 'book.c'; then $(CYGPATH_W) 'book.c'; else $(CYGPATH_W) '$(srcdir)/book.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-book.Tpo $(DEPDIR)/gnome_gnuchess-book.Po
#	source='book.c' object='gnome_gnuchess-book.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-book.obj `if test -f 'book.c'; then $(CYGPATH_W) 'book.c'; else $(CYGPATH_W) '$(srcdir)/book.c'; fi`

gnome_gnuchess-cmd.o: cmd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-cmd.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-cmd.Tpo -c -o gnome_gnuchess-cmd.o `test -f 'cmd.c' || echo '$(srcdir)/'`cmd.c
	mv -f $(DEPDIR)/gnome_gnuchess-cmd.Tpo $(DEPDIR)/gnome_gnuchess-cmd.Po
#	source='cmd.c' object='gnome_gnuchess-cmd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-cmd.o `test -f 'cmd.c' || echo '$(srcdir)/'`cmd.c

gnome_gnuchess-cmd.obj: cmd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-cmd.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-cmd.Tpo -c -o gnome_gnuchess-cmd.obj `if test -f 'cmd.c'; then $(CYGPATH_W) 'cmd.c'; else $(CYGPATH_W) '$(srcdir)/cmd.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-cmd.Tpo $(DEPDIR)/gnome_gnuchess-cmd.Po
#	source='cmd.c' object='gnome_gnuchess-cmd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-cmd.obj `if test -f 'cmd.c'; then $(CYGPATH_W) 'cmd.c'; else $(CYGPATH_W) '$(srcdir)/cmd.c'; fi`

gnome_gnuchess-debug.o: debug.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-debug.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-debug.Tpo -c -o gnome_gnuchess-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c
	mv -f $(DEPDIR)/gnome_gnuchess-debug.Tpo $(DEPDIR)/gnome_gnuchess-debug.Po
#	source='debug.c' object='gnome_gnuchess-debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

gnome_gnuchess-debug.obj: debug.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-debug.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-debug.Tpo -c -o gnome_gnuchess-debug.obj `if test -f 'debug.c'; then $(CYGPATH_W) 'debug.c'; else $(CYGPATH_W) '$(srcdir)/debug.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-debug.Tpo $(DEPDIR)/gnome_gnuchess-debug.Po
#	source='debug.c' object='gnome_gnuchess-debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-debug.obj `if test -f 'debug.c'; then $(CYGPATH_W) 'debug.c'; else $(CYGPATH_W) '$(srcdir)/debug.c'; fi`

gnome_gnuchess-epd.o: epd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-epd.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-epd.Tpo -c -o gnome_gnuchess-epd.o `test -f 'epd.c' || echo '$(srcdir)/'`epd.c
	mv -f $(DEPDIR)/gnome_gnuchess-epd.Tpo $(DEPDIR)/gnome_gnuchess-epd.Po
#	source='epd.c' object='gnome_gnuchess-epd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-epd.o `test -f 'epd.c' || echo '$(srcdir)/'`epd.c

gnome_gnuchess-epd.obj: epd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-epd.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-epd.Tpo -c -o gnome_gnuchess-epd.obj `if test -f 'epd.c'; then $(CYGPATH_W) 'epd.c'; else $(CYGPATH_W) '$(srcdir)/epd.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-epd.Tpo $(DEPDIR)/gnome_gnuchess-epd.Po
#	source='epd.c' object='gnome_gnuchess-epd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-epd.obj `if test -f 'epd.c'; then $(CYGPATH_W) 'epd.c'; else $(CYGPATH_W) '$(srcdir)/epd.c'; fi`

gnome_gnuchess-eval.o: eval.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-eval.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-eval.Tpo -c -o gnome_gnuchess-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c
	mv -f $(DEPDIR)/gnome_gnuchess-eval.Tpo $(DEPDIR)/gnome_gnuchess-eval.Po
#	source='eval.c' object='gnome_gnuchess-eval.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-eval.o `test -f 'eval.c' || echo '$(srcdir)/'`eval.c

gnome_gnuchess-eval.obj: eval.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-eval.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-eval.Tpo -c -o gnome_gnuchess-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-eval.Tpo $(DEPDIR)/gnome_gnuchess-eval.Po
#	source='eval.c' object='gnome_gnuchess-eval.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-eval.obj `if test -f 'eval.c'; then $(CYGPATH_W) 'eval.c'; else $(CYGPATH_W) '$(srcdir)/eval.c'; fi`

gnome_gnuchess-genmove.o: genmove.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-genmove.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-genmove.Tpo -c -o gnome_gnuchess-genmove.o `test -f 'genmove.c' || echo '$(srcdir)/'`genmove.c
	mv -f $(DEPDIR)/gnome_gnuchess-genmove.Tpo $(DEPDIR)/gnome_gnuchess-genmove.Po
#	source='genmove.c' object='gnome_gnuchess-genmove.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-genmove.o `test -f 'genmove.c' || echo '$(srcdir)/'`genmove.c

gnome_gnuchess-genmove.obj: genmove.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-genmove.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-genmove.Tpo -c -o gnome_gnuchess-genmove.obj `if test -f 'genmove.c'; then $(CYGPATH_W) 'genmove.c'; else $(CYGPATH_W) '$(srcdir)/genmove.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-genmove.Tpo $(DEPDIR)/gnome_gnuchess-genmove.Po
#	source='genmove.c' object='gnome_gnuchess-genmove.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-genmove.obj `if test -f 'genmove.c'; then $(CYGPATH_W) 'genmove.c'; else $(CYGPATH_W) '$(srcdir)/genmove.c'; fi`

gnome_gnuchess-getopt.o: getopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-getopt.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-getopt.Tpo -c -o gnome_gnuchess-getopt.o `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c
	mv -f $(DEPDIR)/gnome_gnuchess-getopt.Tpo $(DEPDIR)/gnome_gnuchess-getopt.Po
#	source='getopt.c' object='gnome_gnuchess-getopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-getopt.o `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c

gnome_gnuchess-getopt.obj: getopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-getopt.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-getopt.Tpo -c -o gnome_gnuchess-getopt.obj `if test -f 'getopt.c'; then $(CYGPATH_W) 'getopt.c'; else $(CYGPATH_W) '$(srcdir)/getopt.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-getopt.Tpo $(DEPDIR)/gnome_gnuchess-getopt.Po
#	source='getopt.c' object='gnome_gnuchess-getopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-getopt.obj `if test -f 'getopt.c'; then $(CYGPATH_W) 'getopt.c'; else $(CYGPATH_W) '$(srcdir)/getopt.c'; fi`

gnome_gnuchess-getopt1.o: getopt1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-getopt1.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-getopt1.Tpo -c -o gnome_gnuchess-getopt1.o `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c
	mv -f $(DEPDIR)/gnome_gnuchess-getopt1.Tpo $(DEPDIR)/gnome_gnuchess-getopt1.Po
#	source='getopt1.c' object='gnome_gnuchess-getopt1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-getopt1.o `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c

gnome_gnuchess-getopt1.obj: getopt1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-getopt1.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-getopt1.Tpo -c -o gnome_gnuchess-getopt1.obj `if test -f 'getopt1.c'; then $(CYGPATH_W) 'getopt1.c'; else $(CYGPATH_W) '$(srcdir)/getopt1.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-getopt1.Tpo $(DEPDIR)/gnome_gnuchess-getopt1.Po
#	source='getopt1.c' object='gnome_gnuchess-getopt1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-getopt1.obj `if test -f 'getopt1.c'; then $(CYGPATH_W) 'getopt1.c'; else $(CYGPATH_W) '$(srcdir)/getopt1.c'; fi`

gnome_gnuchess-hash.o: hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-hash.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-hash.Tpo -c -o gnome_gnuchess-hash.o `test -f 'hash.c' || echo '$(srcdir)/'`hash.c
	mv -f $(DEPDIR)/gnome_gnuchess-hash.Tpo $(DEPDIR)/gnome_gnuchess-hash.Po
#	source='hash.c' object='gnome_gnuchess-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-hash.o `test -f 'hash.c' || echo '$(srcdir)/'`hash.c

gnome_gnuchess-hash.obj: hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-hash.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-hash.Tpo -c -o gnome_gnuchess-hash.obj `if test -f 'hash.c'; then $(CYGPATH_W) 'hash.c'; else $(CYGPATH_W) '$(srcdir)/hash.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-hash.Tpo $(DEPDIR)/gnome_gnuchess-hash.Po
#	source='hash.c' object='gnome_gnuchess-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-hash.obj `if test -f 'hash.c'; then $(CYGPATH_W) 'hash.c'; else $(CYGPATH_W) '$(srcdir)/hash.c'; fi`

gnome_gnuchess-hung.o: hung.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-hung.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-hung.Tpo -c -o gnome_gnuchess-hung.o `test -f 'hung.c' || echo '$(srcdir)/'`hung.c
	mv -f $(DEPDIR)/gnome_gnuchess-hung.Tpo $(DEPDIR)/gnome_gnuchess-hung.Po
#	source='hung.c' object='gnome_gnuchess-hung.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-hung.o `test -f 'hung.c' || echo '$(srcdir)/'`hung.c

gnome_gnuchess-hung.obj: hung.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-hung.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-hung.Tpo -c -o gnome_gnuchess-hung.obj `if test -f 'hung.c'; then $(CYGPATH_W) 'hung.c'; else $(CYGPATH_W) '$(srcdir)/hung.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-hung.Tpo $(DEPDIR)/gnome_gnuchess-hung.Po
#	source='hung.c' object='gnome_gnuchess-hung.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-hung.obj `if test -f 'hung.c'; then $(CYGPATH_W) 'hung.c'; else $(CYGPATH_W) '$(srcdir)/hung.c'; fi`

gnome_gnuchess-init.o: init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-init.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-init.Tpo -c -o gnome_gnuchess-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c
	mv -f $(DEPDIR)/gnome_gnuchess-init.Tpo $(DEPDIR)/gnome_gnuchess-init.Po
#	source='init.c' object='gnome_gnuchess-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-init.o `test -f 'init.c' || echo '$(srcdir)/'`init.c

gnome_gnuchess-init.obj: init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-init.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-init.Tpo -c -o gnome_gnuchess-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-init.Tpo $(DEPDIR)/gnome_gnuchess-init.Po
#	source='init.c' object='gnome_gnuchess-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-init.obj `if test -f 'init.c'; then $(CYGPATH_W) 'init.c'; else $(CYGPATH_W) '$(srcdir)/init.c'; fi`

gnome_gnuchess-input.o: input.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-input.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-input.Tpo -c -o gnome_gnuchess-input.o `test -f 'input.c' || echo '$(srcdir)/'`input.c
	mv -f $(DEPDIR)/gnome_gnuchess-input.Tpo $(DEPDIR)/gnome_gnuchess-input.Po
#	source='input.c' object='gnome_gnuchess-input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-input.o `test -f 'input.c' || echo '$(srcdir)/'`input.c

gnome_gnuchess-input.obj: input.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-input.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-input.Tpo -c -o gnome_gnuchess-input.obj `if test -f 'input.c'; then $(CYGPATH_W) 'input.c'; else $(CYGPATH_W) '$(srcdir)/input.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-input.Tpo $(DEPDIR)/gnome_gnuchess-input.Po
#	source='input.c' object='gnome_gnuchess-input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-input.obj `if test -f 'input.c'; then $(CYGPATH_W) 'input.c'; else $(CYGPATH_W) '$(srcdir)/input.c'; fi`

gnome_gnuchess-iterate.o: iterate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-iterate.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-iterate.Tpo -c -o gnome_gnuchess-iterate.o `test -f 'iterate.c' || echo '$(srcdir)/'`iterate.c
	mv -f $(DEPDIR)/gnome_gnuchess-iterate.Tpo $(DEPDIR)/gnome_gnuchess-iterate.Po
#	source='iterate.c' object='gnome_gnuchess-iterate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-iterate.o `test -f 'iterate.c' || echo '$(srcdir)/'`iterate.c

gnome_gnuchess-iterate.obj: iterate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-iterate.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-iterate.Tpo -c -o gnome_gnuchess-iterate.obj `if test -f 'iterate.c'; then $(CYGPATH_W) 'iterate.c'; else $(CYGPATH_W) '$(srcdir)/iterate.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-iterate.Tpo $(DEPDIR)/gnome_gnuchess-iterate.Po
#	source='iterate.c' object='gnome_gnuchess-iterate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-iterate.obj `if test -f 'iterate.c'; then $(CYGPATH_W) 'iterate.c'; else $(CYGPATH_W) '$(srcdir)/iterate.c'; fi`

gnome_gnuchess-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-main.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-main.Tpo -c -o gnome_gnuchess-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	mv -f $(DEPDIR)/gnome_gnuchess-main.Tpo $(DEPDIR)/gnome_gnuchess-main.Po
#	source='main.c' object='gnome_gnuchess-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

gnome_gnuchess-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-main.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-main.Tpo -c -o gnome_gnuchess-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-main.Tpo $(DEPDIR)/gnome_gnuchess-main.Po
#	source='main.c' object='gnome_gnuchess-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

gnome_gnuchess-move.o: move.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-move.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-move.Tpo -c -o gnome_gnuchess-move.o `test -f 'move.c' || echo '$(srcdir)/'`move.c
	mv -f $(DEPDIR)/gnome_gnuchess-move.Tpo $(DEPDIR)/gnome_gnuchess-move.Po
#	source='move.c' object='gnome_gnuchess-move.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-move.o `test -f 'move.c' || echo '$(srcdir)/'`move.c

gnome_gnuchess-move.obj: move.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-move.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-move.Tpo -c -o gnome_gnuchess-move.obj `if test -f 'move.c'; then $(CYGPATH_W) 'move.c'; else $(CYGPATH_W) '$(srcdir)/move.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-move.Tpo $(DEPDIR)/gnome_gnuchess-move.Po
#	source='move.c' object='gnome_gnuchess-move.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-move.obj `if test -f 'move.c'; then $(CYGPATH_W) 'move.c'; else $(CYGPATH_W) '$(srcdir)/move.c'; fi`

gnome_gnuchess-null.o: null.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-null.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-null.Tpo -c -o gnome_gnuchess-null.o `test -f 'null.c' || echo '$(srcdir)/'`null.c
	mv -f $(DEPDIR)/gnome_gnuchess-null.Tpo $(DEPDIR)/gnome_gnuchess-null.Po
#	source='null.c' object='gnome_gnuchess-null.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-null.o `test -f 'null.c' || echo '$(srcdir)/'`null.c

gnome_gnuchess-null.obj: null.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-null.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-null.Tpo -c -o gnome_gnuchess-null.obj `if test -f 'null.c'; then $(CYGPATH_W) 'null.c'; else $(CYGPATH_W) '$(srcdir)/null.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-null.Tpo $(DEPDIR)/gnome_gnuchess-null.Po
#	source='null.c' object='gnome_gnuchess-null.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-null.obj `if test -f 'null.c'; then $(CYGPATH_W) 'null.c'; else $(CYGPATH_W) '$(srcdir)/null.c'; fi`

gnome_gnuchess-output.o: output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-output.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-output.Tpo -c -o gnome_gnuchess-output.o `test -f 'output.c' || echo '$(srcdir)/'`output.c
	mv -f $(DEPDIR)/gnome_gnuchess-output.Tpo $(DEPDIR)/gnome_gnuchess-output.Po
#	source='output.c' object='gnome_gnuchess-output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-output.o `test -f 'output.c' || echo '$(srcdir)/'`output.c

gnome_gnuchess-output.obj: output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-output.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-output.Tpo -c -o gnome_gnuchess-output.obj `if test -f 'output.c'; then $(CYGPATH_W) 'output.c'; else $(CYGPATH_W) '$(srcdir)/output.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-output.Tpo $(DEPDIR)/gnome_gnuchess-output.Po
#	source='output.c' object='gnome_gnuchess-output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-output.obj `if test -f 'output.c'; then $(CYGPATH_W) 'output.c'; else $(CYGPATH_W) '$(srcdir)/output.c'; fi`

gnome_gnuchess-players.o: players.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-players.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-players.Tpo -c -o gnome_gnuchess-players.o `test -f 'players.c' || echo '$(srcdir)/'`players.c
	mv -f $(DEPDIR)/gnome_gnuchess-players.Tpo $(DEPDIR)/gnome_gnuchess-players.Po
#	source='players.c' object='gnome_gnuchess-players.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-players.o `test -f 'players.c' || echo '$(srcdir)/'`players.c

gnome_gnuchess-players.obj: players.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-players.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-players.Tpo -c -o gnome_gnuchess-players.obj `if test -f 'players.c'; then $(CYGPATH_W) 'players.c'; else $(CYGPATH_W) '$(srcdir)/players.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-players.Tpo $(DEPDIR)/gnome_gnuchess-players.Po
#	source='players.c' object='gnome_gnuchess-players.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-players.obj `if test -f 'players.c'; then $(CYGPATH_W) 'players.c'; else $(CYGPATH_W) '$(srcdir)/players.c'; fi`

gnome_gnuchess-pgn.o: pgn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-pgn.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-pgn.Tpo -c -o gnome_gnuchess-pgn.o `test -f 'pgn.c' || echo '$(srcdir)/'`pgn.c
	mv -f $(DEPDIR)/gnome_gnuchess-pgn.Tpo $(DEPDIR)/gnome_gnuchess-pgn.Po
#	source='pgn.c' object='gnome_gnuchess-pgn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-pgn.o `test -f 'pgn.c' || echo '$(srcdir)/'`pgn.c

gnome_gnuchess-pgn.obj: pgn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-pgn.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-pgn.Tpo -c -o gnome_gnuchess-pgn.obj `if test -f 'pgn.c'; then $(CYGPATH_W) 'pgn.c'; else $(CYGPATH_W) '$(srcdir)/pgn.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-pgn.Tpo $(DEPDIR)/gnome_gnuchess-pgn.Po
#	source='pgn.c' object='gnome_gnuchess-pgn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-pgn.obj `if test -f 'pgn.c'; then $(CYGPATH_W) 'pgn.c'; else $(CYGPATH_W) '$(srcdir)/pgn.c'; fi`

gnome_gnuchess-ponder.o: ponder.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-ponder.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-ponder.Tpo -c -o gnome_gnuchess-ponder.o `test -f 'ponder.c' || echo '$(srcdir)/'`ponder.c
	mv -f $(DEPDIR)/gnome_gnuchess-ponder.Tpo $(DEPDIR)/gnome_gnuchess-ponder.Po
#	source='ponder.c' object='gnome_gnuchess-ponder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-ponder.o `test -f 'ponder.c' || echo '$(srcdir)/'`ponder.c

gnome_gnuchess-ponder.obj: ponder.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-ponder.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-ponder.Tpo -c -o gnome_gnuchess-ponder.obj `if test -f 'ponder.c'; then $(CYGPATH_W) 'ponder.c'; else $(CYGPATH_W) '$(srcdir)/ponder.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-ponder.Tpo $(DEPDIR)/gnome_gnuchess-ponder.Po
#	source='ponder.c' object='gnome_gnuchess-ponder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-ponder.obj `if test -f 'ponder.c'; then $(CYGPATH_W) 'ponder.c'; else $(CYGPATH_W) '$(srcdir)/ponder.c'; fi`

gnome_gnuchess-quiesce.o: quiesce.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-quiesce.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-quiesce.Tpo -c -o gnome_gnuchess-quiesce.o `test -f 'quiesce.c' || echo '$(srcdir)/'`quiesce.c
	mv -f $(DEPDIR)/gnome_gnuchess-quiesce.Tpo $(DEPDIR)/gnome_gnuchess-quiesce.Po
#	source='quiesce.c' object='gnome_gnuchess-quiesce.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-quiesce.o `test -f 'quiesce.c' || echo '$(srcdir)/'`quiesce.c

gnome_gnuchess-quiesce.obj: quiesce.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-quiesce.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-quiesce.Tpo -c -o gnome_gnuchess-quiesce.obj `if test -f 'quiesce.c'; then $(CYGPATH_W) 'quiesce.c'; else $(CYGPATH_W) '$(srcdir)/quiesce.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-quiesce.Tpo $(DEPDIR)/gnome_gnuchess-quiesce.Po
#	source='quiesce.c' object='gnome_gnuchess-quiesce.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-quiesce.obj `if test -f 'quiesce.c'; then $(CYGPATH_W) 'quiesce.c'; else $(CYGPATH_W) '$(srcdir)/quiesce.c'; fi`

gnome_gnuchess-random.o: random.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-random.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-random.Tpo -c -o gnome_gnuchess-random.o `test -f 'random.c' || echo '$(srcdir)/'`random.c
	mv -f $(DEPDIR)/gnome_gnuchess-random.Tpo $(DEPDIR)/gnome_gnuchess-random.Po
#	source='random.c' object='gnome_gnuchess-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-random.o `test -f 'random.c' || echo '$(srcdir)/'`random.c

gnome_gnuchess-random.obj: random.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-random.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-random.Tpo -c -o gnome_gnuchess-random.obj `if test -f 'random.c'; then $(CYGPATH_W) 'random.c'; else $(CYGPATH_W) '$(srcdir)/random.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-random.Tpo $(DEPDIR)/gnome_gnuchess-random.Po
#	source='random.c' object='gnome_gnuchess-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-random.obj `if test -f 'random.c'; then $(CYGPATH_W) 'random.c'; else $(CYGPATH_W) '$(srcdir)/random.c'; fi`

gnome_gnuchess-repeat.o: repeat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-repeat.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-repeat.Tpo -c -o gnome_gnuchess-repeat.o `test -f 'repeat.c' || echo '$(srcdir)/'`repeat.c
	mv -f $(DEPDIR)/gnome_gnuchess-repeat.Tpo $(DEPDIR)/gnome_gnuchess-repeat.Po
#	source='repeat.c' object='gnome_gnuchess-repeat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-repeat.o `test -f 'repeat.c' || echo '$(srcdir)/'`repeat.c

gnome_gnuchess-repeat.obj: repeat.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-repeat.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-repeat.Tpo -c -o gnome_gnuchess-repeat.obj `if test -f 'repeat.c'; then $(CYGPATH_W) 'repeat.c'; else $(CYGPATH_W) '$(srcdir)/repeat.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-repeat.Tpo $(DEPDIR)/gnome_gnuchess-repeat.Po
#	source='repeat.c' object='gnome_gnuchess-repeat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-repeat.obj `if test -f 'repeat.c'; then $(CYGPATH_W) 'repeat.c'; else $(CYGPATH_W) '$(srcdir)/repeat.c'; fi`

gnome_gnuchess-search.o: search.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-search.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-search.Tpo -c -o gnome_gnuchess-search.o `test -f 'search.c' || echo '$(srcdir)/'`search.c
	mv -f $(DEPDIR)/gnome_gnuchess-search.Tpo $(DEPDIR)/gnome_gnuchess-search.Po
#	source='search.c' object='gnome_gnuchess-search.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-search.o `test -f 'search.c' || echo '$(srcdir)/'`search.c

gnome_gnuchess-search.obj: search.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-search.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-search.Tpo -c -o gnome_gnuchess-search.obj `if test -f 'search.c'; then $(CYGPATH_W) 'search.c'; else $(CYGPATH_W) '$(srcdir)/search.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-search.Tpo $(DEPDIR)/gnome_gnuchess-search.Po
#	source='search.c' object='gnome_gnuchess-search.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-search.obj `if test -f 'search.c'; then $(CYGPATH_W) 'search.c'; else $(CYGPATH_W) '$(srcdir)/search.c'; fi`

gnome_gnuchess-solve.o: solve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-solve.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-solve.Tpo -c -o gnome_gnuchess-solve.o `test -f 'solve.c' || echo '$(srcdir)/'`solve.c
	mv -f $(DEPDIR)/gnome_gnuchess-solve.Tpo $(DEPDIR)/gnome_gnuchess-solve.Po
#	source='solve.c' object='gnome_gnuchess-solve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-solve.o `test -f 'solve.c' || echo '$(srcdir)/'`solve.c

gnome_gnuchess-solve.obj: solve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-solve.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-solve.Tpo -c -o gnome_gnuchess-solve.obj `if test -f 'solve.c'; then $(CYGPATH_W) 'solve.c'; else $(CYGPATH_W) '$(srcdir)/solve.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-solve.Tpo $(DEPDIR)/gnome_gnuchess-solve.Po
#	source='solve.c' object='gnome_gnuchess-solve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-solve.obj `if test -f 'solve.c'; then $(CYGPATH_W) 'solve.c'; else $(CYGPATH_W) '$(srcdir)/solve.c'; fi`

gnome_gnuchess-sort.o: sort.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-sort.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-sort.Tpo -c -o gnome_gnuchess-sort.o `test -f 'sort.c' || echo '$(srcdir)/'`sort.c
	mv -f $(DEPDIR)/gnome_gnuchess-sort.Tpo $(DEPDIR)/gnome_gnuchess-sort.Po
#	source='sort.c' object='gnome_gnuchess-sort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-sort.o `test -f 'sort.c' || echo '$(srcdir)/'`sort.c

gnome_gnuchess-sort.obj: sort.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-sort.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-sort.Tpo -c -o gnome_gnuchess-sort.obj `if test -f 'sort.c'; then $(CYGPATH_W) 'sort.c'; else $(CYGPATH_W) '$(srcdir)/sort.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-sort.Tpo $(DEPDIR)/gnome_gnuchess-sort.Po
#	source='sort.c' object='gnome_gnuchess-sort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-sort.obj `if test -f 'sort.c'; then $(CYGPATH_W) 'sort.c'; else $(CYGPATH_W) '$(srcdir)/sort.c'; fi`

gnome_gnuchess-swap.o: swap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-swap.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-swap.Tpo -c -o gnome_gnuchess-swap.o `test -f 'swap.c' || echo '$(srcdir)/'`swap.c
	mv -f $(DEPDIR)/gnome_gnuchess-swap.Tpo $(DEPDIR)/gnome_gnuchess-swap.Po
#	source='swap.c' object='gnome_gnuchess-swap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-swap.o `test -f 'swap.c' || echo '$(srcdir)/'`swap.c

gnome_gnuchess-swap.obj: swap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-swap.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-swap.Tpo -c -o gnome_gnuchess-swap.obj `if test -f 'swap.c'; then $(CYGPATH_W) 'swap.c'; else $(CYGPATH_W) '$(srcdir)/swap.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-swap.Tpo $(DEPDIR)/gnome_gnuchess-swap.Po
#	source='swap.c' object='gnome_gnuchess-swap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-swap.obj `if test -f 'swap.c'; then $(CYGPATH_W) 'swap.c'; else $(CYGPATH_W) '$(srcdir)/swap.c'; fi`

gnome_gnuchess-test.o: test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-test.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-test.Tpo -c -o gnome_gnuchess-test.o `test -f 'test.c' || echo '$(srcdir)/'`test.c
	mv -f $(DEPDIR)/gnome_gnuchess-test.Tpo $(DEPDIR)/gnome_gnuchess-test.Po
#	source='test.c' object='gnome_gnuchess-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-test.o `test -f 'test.c' || echo '$(srcdir)/'`test.c

gnome_gnuchess-test.obj: test.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-test.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-test.Tpo -c -o gnome_gnuchess-test.obj `if test -f 'test.c'; then $(CYGPATH_W) 'test.c'; else $(CYGPATH_W) '$(srcdir)/test.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-test.Tpo $(DEPDIR)/gnome_gnuchess-test.Po
#	source='test.c' object='gnome_gnuchess-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-test.obj `if test -f 'test.c'; then $(CYGPATH_W) 'test.c'; else $(CYGPATH_W) '$(srcdir)/test.c'; fi`

gnome_gnuchess-ttable.o: ttable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-ttable.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-ttable.Tpo -c -o gnome_gnuchess-ttable.o `test -f 'ttable.c' || echo '$(srcdir)/'`ttable.c
	mv -f $(DEPDIR)/gnome_gnuchess-ttable.Tpo $(DEPDIR)/gnome_gnuchess-ttable.Po
#	source='ttable.c' object='gnome_gnuchess-ttable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-ttable.o `test -f 'ttable.c' || echo '$(srcdir)/'`ttable.c

gnome_gnuchess-ttable.obj: ttable.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-ttable.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-ttable.Tpo -c -o gnome_gnuchess-ttable.obj `if test -f 'ttable.c'; then $(CYGPATH_W) 'ttable.c'; else $(CYGPATH_W) '$(srcdir)/ttable.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-ttable.Tpo $(DEPDIR)/gnome_gnuchess-ttable.Po
#	source='ttable.c' object='gnome_gnuchess-ttable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-ttable.obj `if test -f 'ttable.c'; then $(CYGPATH_W) 'ttable.c'; else $(CYGPATH_W) '$(srcdir)/ttable.c'; fi`

gnome_gnuchess-util.o: util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-util.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-util.Tpo -c -o gnome_gnuchess-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
	mv -f $(DEPDIR)/gnome_gnuchess-util.Tpo $(DEPDIR)/gnome_gnuchess-util.Po
#	source='util.c' object='gnome_gnuchess-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

gnome_gnuchess-util.obj: util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-util.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-util.Tpo -c -o gnome_gnuchess-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-util.Tpo $(DEPDIR)/gnome_gnuchess-util.Po
#	source='util.c' object='gnome_gnuchess-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

gnome_gnuchess-lexpgn.o: lexpgn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-lexpgn.o -MD -MP -MF $(DEPDIR)/gnome_gnuchess-lexpgn.Tpo -c -o gnome_gnuchess-lexpgn.o `test -f 'lexpgn.c' || echo '$(srcdir)/'`lexpgn.c
	mv -f $(DEPDIR)/gnome_gnuchess-lexpgn.Tpo $(DEPDIR)/gnome_gnuchess-lexpgn.Po
#	source='lexpgn.c' object='gnome_gnuchess-lexpgn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-lexpgn.o `test -f 'lexpgn.c' || echo '$(srcdir)/'`lexpgn.c

gnome_gnuchess-lexpgn.obj: lexpgn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -MT gnome_gnuchess-lexpgn.obj -MD -MP -MF $(DEPDIR)/gnome_gnuchess-lexpgn.Tpo -c -o gnome_gnuchess-lexpgn.obj `if test -f 'lexpgn.c'; then $(CYGPATH_W) 'lexpgn.c'; else $(CYGPATH_W) '$(srcdir)/lexpgn.c'; fi`
	mv -f $(DEPDIR)/gnome_gnuchess-lexpgn.Tpo $(DEPDIR)/gnome_gnuchess-lexpgn.Po
#	source='lexpgn.c' object='gnome_gnuchess-lexpgn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gnome_gnuchess_CFLAGS) $(CFLAGS) -c -o gnome_gnuchess-lexpgn.obj `if test -f 'lexpgn.c'; then $(CYGPATH_W) 'lexpgn.c'; else $(CYGPATH_W) '$(srcdir)/lexpgn.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
